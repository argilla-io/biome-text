(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{322:function(t,a,s){t.exports=s.p+"assets/img/text_classifier_explore_screenshot.b068fd60.png"},402:function(t,a,s){t.exports=s.p+"assets/img/hpo_tensorboard.99b04f5c.png"},473:function(t,a,s){"use strict";s.r(a);var n=s(26),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"hyperparameter-optimization-with-ray-tune"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hyperparameter-optimization-with-ray-tune"}},[t._v("#")]),t._v(" Hyperparameter optimization with Ray Tune")]),t._v(" "),n("p",[n("a",{attrs:{target:"_blank",href:"https://www.recogn.ai/biome-text/master/documentation/tutorials/3-Hyperparameter_optimization_with_Ray_Tune.html"}},[n("img",{staticClass:"icon",attrs:{src:"https://www.recogn.ai/biome-text/master/assets/img/biome-isotype.svg",width:"24"}})]),t._v(" "),n("a",{attrs:{href:"https://www.recogn.ai/biome-text/master/documentation/tutorials/3-Hyperparameter_optimization_with_Ray_Tune.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("View on recogn.ai"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{target:"_blank",href:"https://colab.research.google.com/github/recognai/biome-text/blob/master/docs/docs/documentation/tutorials/3-Hyperparameter_optimization_with_Ray_Tune.ipynb"}},[n("img",{staticClass:"icon",attrs:{src:"https://www.tensorflow.org/images/colab_logo_32px.png",width:"24"}})]),t._v(" "),n("a",{attrs:{href:"https://colab.research.google.com/github/recognai/biome-text/blob/master/docs/docs/documentation/tutorials/3-Hyperparameter_optimization_with_Ray_Tune.ipynb",target:"_blank",rel:"noopener noreferrer"}},[t._v("Run in Google Colab"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{target:"_blank",href:"https://github.com/recognai/biome-text/blob/master/docs/docs/documentation/tutorials/3-Hyperparameter_optimization_with_Ray_Tune.ipynb"}},[n("img",{staticClass:"icon",attrs:{src:"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",width:"24"}})]),t._v(" "),n("a",{attrs:{href:"https://github.com/recognai/biome-text/blob/master/docs/docs/documentation/tutorials/3-Hyperparameter_optimization_with_Ray_Tune.ipynb",target:"_blank",rel:"noopener noreferrer"}},[t._v("View source on GitHub"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("When running this tutorial in Google Colab, make sure to install "),n("em",[t._v("biome.text")]),t._v(" and "),n("em",[t._v("ray tune")]),t._v(" first:")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("!pip install "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("U pip\n!pip install "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("U git"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("https"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v("github"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("recognai"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("biome"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git\nexit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Force restart of the runtime")]),t._v("\n")])])]),n("p",[t._v("If you want to log your runs with "),n("a",{attrs:{href:"https://wandb.ai",target:"_blank",rel:"noopener noreferrer"}},[t._v("WandB"),n("OutboundLink")],1),t._v(", don't forget to install its client and log in.")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("!pip install wandb\n!wandb login\n")])])]),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),n("p",[t._v("In this tutorial we will use a GPU by default.\nSo when running this tutorial in Google Colab, make sure that you request one ("),n("em",[t._v("Edit -> Notebook settings")]),t._v(").")])]),t._v(" "),n("h2",{attrs:{id:"introduction"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),n("p",[t._v("Here we will optimize the hyperparameters of the short-text classifier from "),n("a",{attrs:{href:"https://www.recogn.ai/biome-text/master/documentation/tutorials/1-Training_a_text_classifier.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("this tutorial"),n("OutboundLink")],1),t._v(", hence we recommend to have a look at it first before going through this tutorial.\nFor the Hyper-Parameter Optimization (HPO) we rely on the awesome "),n("a",{attrs:{href:"https://docs.ray.io/en/latest/tune.html#tune-index",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ray Tune library"),n("OutboundLink")],1),t._v(".")]),t._v(" "),n("p",[t._v("For a short introduction to HPO with Ray Tune you can have a look at this nice "),n("a",{attrs:{href:"https://www.youtube.com/watch?v=VX7HvEoMrsA",target:"_blank",rel:"noopener noreferrer"}},[t._v("talk"),n("OutboundLink")],1),t._v(" by Richard Liaw.\nWe will follow his terminology and use the term "),n("em",[t._v("trial")]),t._v(" to refer to a training run of one set of hyperparameters.")]),t._v(" "),n("h3",{attrs:{id:"imports"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#imports"}},[t._v("#")]),t._v(" Imports")]),t._v(" "),n("p",[t._v("First let's import all the stuff we need for this tutorial:")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" os\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" biome"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Pipeline"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Dataset\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" biome"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("configuration "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" VocabularyConfiguration"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" WordFeatures"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TrainerConfiguration\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" biome"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loggers "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" BaseTrainLogger\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" biome"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hpo "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" TuneExperiment\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" ray "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" tune\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" biome"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" explore\n")])])]),n("h2",{attrs:{id:"creating-the-datasets"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#creating-the-datasets"}},[t._v("#")]),t._v(" Creating the datasets")]),t._v(" "),n("p",[t._v("As a first step we will download the training and validation data to our local machine, and create our datasets.")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("!curl "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("O https"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v("biome"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("tutorials"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("s3"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("eu"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("west"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("amazonaws"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("text_classifier"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("business"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("train"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("csv\n!curl "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("O https"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v("biome"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("tutorials"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("s3"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("eu"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("west"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("amazonaws"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("text_classifier"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("business"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("valid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("csv\n")])])]),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("train_ds "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Dataset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("from_csv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"business.cat.train.csv"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nvalid_ds "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Dataset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("from_csv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"business.cat.valid.csv"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h2",{attrs:{id:"defining-the-pipeline-and-the-search-space"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#defining-the-pipeline-and-the-search-space"}},[t._v("#")]),t._v(" Defining the pipeline and the search space")]),t._v(" "),n("p",[t._v("As mentioned in the introduction we will use the same pipeline configuration as used in the "),n("a",{attrs:{href:"https://www.recogn.ai/biome-text/master/documentation/tutorials/1-Training_a_text_classifier.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("base tutorial"),n("OutboundLink")],1),t._v(").")]),t._v(" "),n("p",[t._v("To perform a random hyperparameter search (as well as a grid search) we simply have to replace the parameters we want to optimize with methods from the "),n("a",{attrs:{href:"https://docs.ray.io/en/latest/tune/api_docs/search_space.html#random-distributions-api",target:"_blank",rel:"noopener noreferrer"}},[t._v("Random Distributions API"),n("OutboundLink")],1),t._v(" or the "),n("a",{attrs:{href:"https://docs.ray.io/en/latest/tune/api_docs/search_space.html#grid-search-api",target:"_blank",rel:"noopener noreferrer"}},[t._v("Grid Search API"),n("OutboundLink")],1),t._v(" in our configuration dictionaries.\nFor a complete description of both APIs and how they interplay with each other, see the corresponding section in the "),n("a",{attrs:{href:"https://docs.ray.io/en/latest/tune/api_docs/search_space.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ray Tune docs"),n("OutboundLink")],1),t._v(".")]),t._v(" "),n("p",[t._v("In our case we will tune 9 parameters:")]),t._v(" "),n("ul",[n("li",[t._v("the output dimensions of our "),n("code",[t._v("word")]),t._v(" and "),n("code",[t._v("char")]),t._v(" features")]),t._v(" "),n("li",[t._v("the dropout of our "),n("code",[t._v("char")]),t._v(" feature")]),t._v(" "),n("li",[t._v("the architecture of our pooler ("),n("em",[t._v("GRU")]),t._v(" versus "),n("em",[t._v("LSTM")]),t._v(")")]),t._v(" "),n("li",[t._v("number of layers and hidden size of our pooler, as well as if it should be bidirectional")]),t._v(" "),n("li",[t._v("hidden dimension of our feed forward network")]),t._v(" "),n("li",[t._v("and the learning rate")])]),t._v(" "),n("p",[t._v("For most of the parameters we will provide discrete values from which Tune will sample randomly, while for the dropout and learning rate we will provide a continuous linear and logarithmic range, respectively.\nSince we want to directly compare the outcome of the optimization with the base configuration of the "),n("a",{attrs:{href:"https://www.recogn.ai/biome-text/master/documentation/tutorials/1-Training_a_text_classifier.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("underlying tutorial"),n("OutboundLink")],1),t._v(", we will fix the number of epochs to 3.")]),t._v(" "),n("p",[t._v("Not all of the parameters above are worth tuning, but we want to stress the flexibility that "),n("em",[t._v("Ray Tune")]),t._v(" and "),n("em",[t._v("biome.text")]),t._v(" offers you.")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("Tip")]),t._v(" "),n("p",[t._v('Keep in mind that the learning rate "'),n("em",[t._v("is often the single most important hyper-parameter and one should always make sure that it has been tuned (up to approximately a factor of 2). ... If there is only time to optimize one hyper-parameter and one uses stochastic gradient descent, then this is the hyper-parameter that is worth tuning.")]),t._v('" ('),n("a",{attrs:{href:"https://arxiv.org/abs/1206.5533",target:"_blank",rel:"noopener noreferrer"}},[t._v("Yoshua Bengio"),n("OutboundLink")],1),t._v(").")])]),t._v(" "),n("p",[t._v("In the following configuration dictionaries we replaced the relevant parameters with tune's search spaces.")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# defining the search spaces in our pipeline config")]),t._v("\npipeline_config "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"german_business_names"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tokenizer"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text_cleaning"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rules"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"strip_spaces"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"features"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"word"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"embedding_dim"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tune"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("choice"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lowercase_tokens"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"char"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"embedding_dim"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lowercase_characters"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"encoder"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gru"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"num_layers"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hidden_size"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tune"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("choice"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bidirectional"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dropout"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tune"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("uniform"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"head"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TextClassification"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"labels"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("train_ds"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"label"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pooler"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tune"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("choice"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gru"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lstm"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"num_layers"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tune"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("choice"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hidden_size"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tune"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("choice"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bidirectional"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tune"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("choice"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"feedforward"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"num_layers"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hidden_dims"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tune"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("choice"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"activations"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"relu"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dropout"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("       \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# defining the search spaces in our trainer config")]),t._v("\ntrainer_config "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"optimizer"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"adam"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lr"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tune"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loguniform"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.001")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.01")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"num_epochs"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),n("p",[t._v("By default we will use a GPU if available.\nIf you do not want to use your GPU, just specify "),n("code",[t._v('"cuda_device": -1')]),t._v(" in your "),n("code",[t._v("trainer_config")]),t._v(" above.")])]),t._v(" "),n("h2",{attrs:{id:"starting-the-random-search"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#starting-the-random-search"}},[t._v("#")]),t._v(" Starting the random search")]),t._v(" "),n("p",[t._v("Before starting our random hyperparameter search we first have to create a "),n("code",[t._v("TuneExperiment")]),t._v(" instance with our configurations dicts and our datasets.\nWe also set a name that will mainly be used as project and experiment name for the integrated WandB and MLFlow logger, respectively.")]),t._v(" "),n("p",[t._v("Furthermore, we can pass on all the parameters available for the underlying "),n("a",{attrs:{href:"https://docs.ray.io/en/master/tune/api_docs/execution.html#tune-experiment",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("tune.Experiment")]),n("OutboundLink")],1),t._v(" class:")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("The number of trials our search will go through depends on the "),n("code",[t._v("num_samples")]),t._v(" parameter.\nIn our case, a random search, it equals the number of trials, whereas in the case of a grid search the total number of trials is "),n("code",[t._v("num_samples")]),t._v(" times the grid configurations (see the "),n("a",{attrs:{href:"https://docs.ray.io/en/latest/tune/api_docs/search_space.html#overview",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tune docs"),n("OutboundLink")],1),t._v(" for illustrative examples).")])]),t._v(" "),n("li",[n("p",[t._v("The "),n("code",[t._v("local_dir")]),t._v(" parameter defines the output directory of the HPO results and will also contain the training results of each trial (that is the model weights and metrics).")])]),t._v(" "),n("li",[n("p",[t._v("The number of parallel running trials depends on your "),n("code",[t._v("resources_per_trial")]),t._v(" configuration and your local resources.\nThe default value is "),n("code",[t._v('{"cpu": 1, "gpu": 0}')]),t._v(" and results, for example, in 8 parallel running trials on a machine with 8 CPUs.\nYou can also use fractional values. To share a GPU between 2 trials, for example, pass on "),n("code",[t._v('{"gpu": 0.5}')]),t._v(".")])])]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),n("p",[t._v("Keep in mind: to run your HPO on GPUs, you have to specify them in the "),n("code",[t._v("resources_per_trial")]),t._v(" parameter when calling "),n("code",[t._v("tune.run()")]),t._v(".\nIf you do not want to use a GPU, just set the value to 0 "),n("code",[t._v('{"cpu": 1, "gpu": 0}')]),t._v(".")])]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("my_random_search "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TuneExperiment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    pipeline_config"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("pipeline_config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    trainer_config"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("trainer_config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    train_dataset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("train_ds"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    valid_dataset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("valid_ds"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My first random search"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# `tune.Experiment` kwargs:")]),t._v("\n    num_samples"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    local_dir"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tune_runs"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    resources_per_trial"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cpu"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gpu"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("With our "),n("code",[t._v("TuneExperiment")]),t._v(" object at hand, we simply have to pass it on to the "),n("a",{attrs:{href:"https://docs.ray.io/en/master/tune/api_docs/execution.html#tune-run",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("tune.run")]),n("OutboundLink")],1),t._v(" function to start our random search.")]),t._v(" "),n("p",[t._v("In this tutorial we will perform a random search together with the "),n("a",{attrs:{href:"https://blog.ml.cmu.edu/2018/12/12/massively-parallel-hyperparameter-optimization/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Asynchronous Successive Halving Algorithm (ASHA)"),n("OutboundLink")],1),t._v(" to schedule our trials.\nThe Ray Tune developers advocate this "),n("code",[t._v("scheduler")]),t._v(" as a good starting point for its aggressive termination of low-performing trials.\nYou can look up the available configurations in the "),n("a",{attrs:{href:"https://docs.ray.io/en/latest/tune/api_docs/schedulers.html#asha-tune-schedulers-ashascheduler",target:"_blank",rel:"noopener noreferrer"}},[t._v("ASHAScheduler docs"),n("OutboundLink")],1),t._v(", here we will just use the default parameters.")]),t._v(" "),n("p",[t._v("We also have to specify on what "),n("code",[t._v("metric")]),t._v(" to optimize and its "),n("code",[t._v("mode")]),t._v(" (should the metric be "),n("em",[t._v("minimized")]),t._v(" ("),n("code",[t._v("min")]),t._v(") or "),n("em",[t._v("maximized")]),t._v(" ("),n("code",[t._v("max")]),t._v(") ).\nThis should be the same as the "),n("code",[t._v("validation_metric")]),t._v(" specified in your trainer configuration. This guarantees the alignment of the patience mechanism and the trial scheduler, and also makes sure that the best model weights correspond to the best metrics reported by ray tune.")]),t._v(" "),n("p",[t._v("The "),n("code",[t._v("progress_reporter")]),t._v(" is a nice feature to keep track of the progress inside a Jupyter Notebook, for example.")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("analysis "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tune"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    my_random_search"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    scheduler"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tune"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("schedulers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ASHAScheduler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    metric"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"validation_loss"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    mode"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"min"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    progress_reporter"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tune"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("JupyterNotebookReporter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("overwrite"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("Tip")]),t._v(" "),n("p",[t._v("You can also create an "),n("code",[t._v("Analysis")]),t._v(" object from the output directory of the HPO run, once it has finished:")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" ray"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tune"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("analysis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("experiment_analysis "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Analysis\nanalysis "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Analysis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    experiment_dir"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("'tune_runs"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v('My first random search"'),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    default_metric"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"validation_loss"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    default_mode"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"min"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),n("h3",{attrs:{id:"following-the-progress-with-tensorboard-optional"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#following-the-progress-with-tensorboard-optional"}},[t._v("#")]),t._v(" Following the progress with tensorboard (optional)")]),t._v(" "),n("p",[t._v("Ray Tune automatically logs its results with "),n("a",{attrs:{href:"https://www.tensorflow.org/tensorboard/",target:"_blank",rel:"noopener noreferrer"}},[t._v("TensorBoard"),n("OutboundLink")],1),t._v(".\nWe can take advantage of this and launch a TensorBoard instance before starting the hyperparameter search to follow its progress.\nThe "),n("code",[t._v("RayTuneTrainable")]),t._v(" class will also log the metrics to MLFlow and WandB, if you prefer those platforms.")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("load_ext tensorboard\n")])])]),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("tensorboard "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("logdir "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("runs"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("tune\n")])])]),n("p",[n("img",{attrs:{src:s(402),alt:"Screenshot of TensorBoard with Ray Tune"}}),t._v(" "),n("em",[t._v("Screenshot of TensorBoard")])]),t._v(" "),n("h2",{attrs:{id:"checking-the-results"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#checking-the-results"}},[t._v("#")]),t._v(" Checking the results")]),t._v(" "),n("p",[t._v("The "),n("em",[t._v("analysis")]),t._v(" object returned by "),n("code",[t._v("tune.run")]),t._v(" can be accessed through a "),n("em",[t._v("pandas DataFrame")]),t._v(".")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("analysis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dataframe"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("Event though with 50 trials we visit just a small space of our possible configurations, we should have achieved an accuracy of ~0.94, an increase of roughly 3 points compared to the original configuration of the "),n("a",{attrs:{href:"https://www.recogn.ai/biome-text/master/documentation/tutorials/1-Training_a_text_classifier.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("base tutorial"),n("OutboundLink")],1),t._v(".")]),t._v(" "),n("p",[t._v("In a real-life example, though, you probably should increase the number of epochs, since the validation loss in general seems to be decreasing further.")]),t._v(" "),n("p",[t._v("A next step could be to fix some of the tuned parameters to the preferred value, and tune other parameters further or limit their value space.")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("Tip")]),t._v(" "),n("p",[t._v("To obtain insights about the importance and tendencies of each hyperparameter for the model, we recommend using TensorBoard's "),n("em",[t._v("HPARAM")]),t._v(" section and follow Richard Liaw's suggestions at the end of his "),n("a",{attrs:{href:"https://www.youtube.com/watch?v=VX7HvEoMrsA",target:"_blank",rel:"noopener noreferrer"}},[t._v("talk"),n("OutboundLink")],1),t._v(".")])]),t._v(" "),n("h3",{attrs:{id:"evaluating-the-best-performing-model"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#evaluating-the-best-performing-model"}},[t._v("#")]),t._v(" Evaluating the best performing model")]),t._v(" "),n("p",[t._v("The "),n("em",[t._v("analysis")]),t._v(" object also provides some convenient methods to obtain the best performing configuration, as well as the "),n("code",[t._v("logdir")]),t._v(" where the results of the trial are saved.")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("analysis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_best_config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"best_validation_loss"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"min"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("We can use the "),n("code",[t._v("best_logdir")]),t._v(" to create a pipeline with the best performing model and start making predictions.")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("best_logdir "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" analysis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_best_logdir"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"best_validation_loss"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"min"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbest_model "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" os"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("best_logdir"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"training"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"model.tar.gz"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\npl_trained "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Pipeline"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("from_pretrained"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("best_model"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("pl_trained"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("predict"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Autohaus Recognai"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("Or we can use "),n("em",[t._v("biome.text")]),t._v("'s explore UI to evaluate the performance of our model in more detail.")]),t._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[t._v("Warning")]),t._v(" "),n("p",[t._v("For the UI to work you need a running "),n("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/install-elasticsearch.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Elasticsearch"),n("OutboundLink")],1),t._v(" instance.\nWe recommend installing "),n("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/7.7/docker.html#docker-cli-run-dev-mode",target:"_blank",rel:"noopener noreferrer"}},[t._v("Elasticsearch with docker"),n("OutboundLink")],1),t._v(".")])]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("explore"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("create"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pl_trained"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" valid_ds"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attributions"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:s(322),alt:"Screenshot of the biome.text explore UI"}}),t._v(" "),n("em",[t._v("Screenshot of the biome.text explore UI")])]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),n("p",[t._v("For an unbiased evaluation of the model you should use a test dataset that was not used during the HPO!")])]),t._v(" "),n("h2",{attrs:{id:"appendix-custom-hpo-with-ray-tune"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#appendix-custom-hpo-with-ray-tune"}},[t._v("#")]),t._v(" Appendix: Custom HPO with ray tune")]),t._v(" "),n("p",[t._v("As seen in this tutorial, "),n("em",[t._v("biome.text")]),t._v(" provides you some convenient tools to easily perform HPO in a few steps.\nTo take advantage of all the ray tune features, you can also define your own trainable function and follow ray tune's "),n("a",{attrs:{href:"https://docs.ray.io/en/latest/tune/api_docs/trainable.html#tune-function-api",target:"_blank",rel:"noopener noreferrer"}},[t._v("function API"),n("OutboundLink")],1),t._v(".")]),t._v(" "),n("p",[t._v("Below we give a minimal example of such an approach.")]),t._v(" "),n("h3",{attrs:{id:"implementing-the-report"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#implementing-the-report"}},[t._v("#")]),t._v(" Implementing the report")]),t._v(" "),n("p",[t._v("A lot of features in ray tune require the trials to report some metrics during their trainings, such as trial schedulers that adaptively allocate resources as the ASHA scheduler used above.\nFor the reporting we can use the abstract "),n("code",[t._v("biome.text.loggers.BaseTrainLogger")]),t._v(" class, that allows to make callbacks after each epoch:")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TuneReporter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BaseTrainLogger"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log_epoch_metrics")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" epoch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" metrics"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        tune"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("report"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            validation_loss"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("metrics"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"validation_loss"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n            validation_accuracy"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("metrics"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"validation_accuracy"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        \ntune_reporter "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TuneReport"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h3",{attrs:{id:"defining-the-training-loop"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#defining-the-training-loop"}},[t._v("#")]),t._v(" Defining the training loop")]),t._v(" "),n("p",[t._v("Following the "),n("a",{attrs:{href:"https://docs.ray.io/en/latest/tune/api_docs/trainable.html#tune-function-api",target:"_blank",rel:"noopener noreferrer"}},[t._v("function-based Trainable API"),n("OutboundLink")],1),t._v(", we now have to define a "),n("code",[t._v("trainable")]),t._v(" function that takes as input a configuration dictionary and executes a training run:")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("trainable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    pl "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Pipeline"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("from_config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pipeline"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    trainer_config "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TrainerConfiguration"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"trainer"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    train_ds "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DataSource"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("train_path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    valid_ds "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DataSource"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("valid_path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        \n    pl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("train"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        output"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"output"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        training"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("train_ds"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        validation"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("valid_ds"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        trainer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("trainer_config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        loggers"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tune_report"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("In the "),n("code",[t._v("Pipeline.train()")]),t._v(" method above we added our "),n("code",[t._v("tune_reporter")]),t._v(" instance to the loggers in order to report the validation loss and accuracy back to tune.\nNote that we did not include a MLFlow or WandB logger!")]),t._v(" "),n("p",[t._v("The "),n("code",[t._v("config")]),t._v(" dictionary, where we define the pipeline, trainer and the hyperparameters, could look something like this:")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("configs "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pipeline"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"german_business_names"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tokenizer"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text_cleaning"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rules"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"strip_spaces"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"features"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"word"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"embedding_dim"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tune"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("choice"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lowercase_tokens"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"head"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TextClassification"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"labels"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("labels"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value_counts"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pooler"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tune"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("choice"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gru"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lstm"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"num_layers"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tune"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("choice"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hidden_size"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tune"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("choice"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bidirectional"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tune"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("choice"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("       \n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"trainer"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"optimizer"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"adam"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lr"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tune"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loguniform"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.001")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.01")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"num_epochs"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("With the trainable function at hand we can now call the "),n("code",[t._v("tune.run")]),t._v(" method to start our HPO.")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("analysis "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tune"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    trainable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    config"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("configs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    num_samples"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("For an advanced example with checkpointing, you can have a look at the colab notebook "),n("a",{attrs:{href:"https://colab.research.google.com/drive/1vmt3D_2kq6VxE2-nlwsZl0YrN3nAhHp0?usp=sharing",target:"_blank",rel:"noopener noreferrer"}},[n("em",[t._v("Population Based Training with biome.text")]),n("OutboundLink")],1),t._v(".")])])}),[],!1,null,null,null);a.default=e.exports}}]);