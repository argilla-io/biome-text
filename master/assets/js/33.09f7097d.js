(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{440:function(t,a,i){"use strict";i.r(a);var e=i(27),o=Object(e.a)({},(function(){var t=this,a=t.$createElement,i=t._self._c||a;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"biome-text-modules-configuration-defs"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#biome-text-modules-configuration-defs"}},[t._v("#")]),t._v(" biome.text.modules.configuration.defs "),i("Badge",{attrs:{text:"Module"}})],1),t._v(" "),i("div"),t._v(" "),i("div"),t._v(" "),i("pre",{staticClass:"title"},[i("h2",{attrs:{id:"componentconfiguration"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#componentconfiguration"}},[t._v("#")]),t._v(" ComponentConfiguration "),i("Badge",{attrs:{text:"Class"}})],1),t._v("\n")]),t._v(" "),i("pre",{staticClass:"language-python"},[i("code",[t._v("\n"),i("span",{staticClass:"token keyword"},[t._v("class")]),t._v(" "),i("span",{staticClass:"ident"},[t._v("ComponentConfiguration")]),t._v(" (*args, **kwds)"),t._v("\n")]),t._v("\n")]),t._v(" "),i("p",[t._v("The layer spec component allows create Pytorch modules lazily,\nand instantiate them inside a context (Model or other component) dimension layer chain.")]),t._v(" "),i("p",[t._v("The layer spec wraps a component params and will generate an instance of type T once the input_dim is set.")]),t._v(" "),i("pre",{staticClass:"title"},[i("h3",{attrs:{id:"ancestors"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#ancestors"}},[t._v("#")]),t._v(" Ancestors")]),t._v("\n")]),t._v(" "),i("ul",{staticClass:"hlist"},[i("li",[t._v("typing.Generic")]),t._v(" "),i("li",[t._v("allennlp.common.from_params.FromParams")])]),t._v(" "),i("pre",{staticClass:"title"},[i("h3",{attrs:{id:"subclasses"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#subclasses"}},[t._v("#")]),t._v(" Subclasses")]),t._v("\n")]),t._v(" "),i("ul",{staticClass:"hlist"},[i("li",[i("a",{attrs:{title:"biome.text.modules.configuration.allennlp_configuration.BiMpmMatchingConfiguration",href:"allennlp_configuration.html#biome.text.modules.configuration.allennlp_configuration.BiMpmMatchingConfiguration"}},[t._v("BiMpmMatchingConfiguration")])]),t._v(" "),i("li",[i("a",{attrs:{title:"biome.text.modules.configuration.allennlp_configuration.EmbeddingConfiguration",href:"allennlp_configuration.html#biome.text.modules.configuration.allennlp_configuration.EmbeddingConfiguration"}},[t._v("EmbeddingConfiguration")])]),t._v(" "),i("li",[i("a",{attrs:{title:"biome.text.modules.configuration.allennlp_configuration.FeedForwardConfiguration",href:"allennlp_configuration.html#biome.text.modules.configuration.allennlp_configuration.FeedForwardConfiguration"}},[t._v("FeedForwardConfiguration")])]),t._v(" "),i("li",[i("a",{attrs:{title:"biome.text.modules.configuration.allennlp_configuration.Seq2SeqEncoderConfiguration",href:"allennlp_configuration.html#biome.text.modules.configuration.allennlp_configuration.Seq2SeqEncoderConfiguration"}},[t._v("Seq2SeqEncoderConfiguration")])]),t._v(" "),i("li",[i("a",{attrs:{title:"biome.text.modules.configuration.allennlp_configuration.Seq2VecEncoderConfiguration",href:"allennlp_configuration.html#biome.text.modules.configuration.allennlp_configuration.Seq2VecEncoderConfiguration"}},[t._v("Seq2VecEncoderConfiguration")])]),t._v(" "),i("li",[i("a",{attrs:{title:"biome.text.modules.heads.classification.doc_classification.DocumentClassificationConfiguration",href:"../heads/classification/doc_classification.html#biome.text.modules.heads.classification.doc_classification.DocumentClassificationConfiguration"}},[t._v("DocumentClassificationConfiguration")])]),t._v(" "),i("li",[i("a",{attrs:{title:"biome.text.modules.heads.classification.record_classification.RecordClassificationConfiguration",href:"../heads/classification/record_classification.html#biome.text.modules.heads.classification.record_classification.RecordClassificationConfiguration"}},[t._v("RecordClassificationConfiguration")])]),t._v(" "),i("li",[i("a",{attrs:{title:"biome.text.modules.heads.classification.record_pair_classification.RecordPairClassificationConfiguration",href:"../heads/classification/record_pair_classification.html#biome.text.modules.heads.classification.record_pair_classification.RecordPairClassificationConfiguration"}},[t._v("RecordPairClassificationConfiguration")])]),t._v(" "),i("li",[i("a",{attrs:{title:"biome.text.modules.heads.classification.relation_classification.RelationClassificationConfiguration",href:"../heads/classification/relation_classification.html#biome.text.modules.heads.classification.relation_classification.RelationClassificationConfiguration"}},[t._v("RelationClassificationConfiguration")])]),t._v(" "),i("li",[i("a",{attrs:{title:"biome.text.modules.heads.classification.text_classification.TextClassificationConfiguration",href:"../heads/classification/text_classification.html#biome.text.modules.heads.classification.text_classification.TextClassificationConfiguration"}},[t._v("TextClassificationConfiguration")])]),t._v(" "),i("li",[i("a",{attrs:{title:"biome.text.modules.heads.language_modelling.LanguageModellingConfiguration",href:"../heads/language_modelling.html#biome.text.modules.heads.language_modelling.LanguageModellingConfiguration"}},[t._v("LanguageModellingConfiguration")])]),t._v(" "),i("li",[i("a",{attrs:{title:"biome.text.modules.heads.task_head.TaskHeadConfiguration",href:"../heads/task_head.html#biome.text.modules.heads.task_head.TaskHeadConfiguration"}},[t._v("TaskHeadConfiguration")])]),t._v(" "),i("li",[i("a",{attrs:{title:"biome.text.modules.heads.token_classification.TokenClassificationConfiguration",href:"../heads/token_classification.html#biome.text.modules.heads.token_classification.TokenClassificationConfiguration"}},[t._v("TokenClassificationConfiguration")])])]),t._v(" "),i("dl",[i("pre",{staticClass:"title"},[i("h3",{attrs:{id:"from-params"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#from-params"}},[t._v("#")]),t._v(" from_params "),i("Badge",{attrs:{text:"Static method"}})],1),t._v("\n")]),t._v(" "),i("dt",[i("div",{staticClass:"language-python extra-class"},[i("pre",{staticClass:"language-python"},[i("code",[t._v("\n"),i("span",{staticClass:"token keyword"},[t._v("def")]),t._v(" "),i("span",{staticClass:"ident"},[t._v("from_params")]),t._v(" ("),t._v("\n  params: allennlp.common.params.Params,\n  **extras,\n)  -> ~T\n")]),t._v("\n")])])]),t._v(" "),i("dd",[i("p",[t._v("This is the automatic implementation of "),i("code",[t._v("from_params")]),t._v(". Any class that subclasses\n"),i("code",[t._v("FromParams")]),t._v(" (or "),i("code",[t._v("Registrable")]),t._v(", which itself subclasses "),i("code",[t._v("FromParams")]),t._v(') gets this\nimplementation for free.\nIf you want your class to be instantiated from params in the\n"obvious" way – pop off parameters and hand them to your constructor with the same names –\nthis provides that functionality.')]),t._v(" "),i("p",[t._v("If you need more complex logic in your from "),i("code",[t._v("from_params")]),t._v(" method, you'll have to implement\nyour own method that overrides this one.")]),t._v(" "),i("p",[t._v("The "),i("code",[t._v("constructor_to_call")]),t._v(" and "),i("code",[t._v("constructor_to_inspect")]),t._v(" arguments deal with a bit of\nredirection that we do.\nWe allow you to register particular "),i("code",[t._v("@classmethods")]),t._v(" on a class as\nthe constructor to use for a registered name.\nThis lets you, e.g., have a single\n"),i("code",[t._v("Vocabulary")]),t._v(" class that can be constructed in two different ways, with different names\nregistered to each constructor.\nIn order to handle this, we need to know not just the class\nwe're trying to construct ("),i("code",[t._v("cls")]),t._v("), but also what method we should inspect to find its\narguments ("),i("code",[t._v("constructor_to_inspect")]),t._v("), and what method to call when we're done constructing\narguments ("),i("code",[t._v("constructor_to_call")]),t._v(").\nThese two methods are the same when you've used a\n"),i("code",[t._v("@classmethod")]),t._v(" as your constructor, but they are "),i("code",[t._v("different")]),t._v(" when you use the default\nconstructor (because you inspect "),i("code",[t._v("__init__")]),t._v(", but call "),i("code",[t._v("cls()")]),t._v(").")])])]),t._v(" "),i("pre",{staticClass:"title"},[i("h3",{attrs:{id:"instance-variables"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#instance-variables"}},[t._v("#")]),t._v(" Instance variables")]),t._v("\n")]),t._v(" "),i("dl",[i("dt",{attrs:{id:"biome.text.modules.configuration.defs.ComponentConfiguration.config"}},[i("code",{staticClass:"name"},[t._v("var "),i("span",{staticClass:"ident"},[t._v("config")]),t._v(" : Dict[str, Any]")])]),t._v(" "),i("dd",[i("p",[t._v("Component read-only configuration")])])]),t._v(" "),i("dl",[i("pre",{staticClass:"title"},[i("h3",{attrs:{id:"input-dim"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#input-dim"}},[t._v("#")]),t._v(" input_dim "),i("Badge",{attrs:{text:"Method"}})],1),t._v("\n")]),t._v(" "),i("dt",[i("div",{staticClass:"language-python extra-class"},[i("pre",{staticClass:"language-python"},[i("code",[t._v("\n"),i("span",{staticClass:"token keyword"},[t._v("def")]),t._v(" "),i("span",{staticClass:"ident"},[t._v("input_dim")]),t._v(" ("),t._v("\n  self,\n  input_dim: int,\n)  -> "),i("a",{attrs:{title:"biome.text.modules.configuration.defs.ComponentConfiguration",href:"#biome.text.modules.configuration.defs.ComponentConfiguration"}},[t._v("ComponentConfiguration")]),t._v("\n")]),t._v("\n")])])]),t._v(" "),i("dd",[i("p",[t._v("Sets the input dimension attribute for this layer configuration")])]),t._v(" "),i("pre",{staticClass:"title"},[i("h3",{attrs:{id:"compile"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#compile"}},[t._v("#")]),t._v(" compile "),i("Badge",{attrs:{text:"Method"}})],1),t._v("\n")]),t._v(" "),i("dt",[i("div",{staticClass:"language-python extra-class"},[i("pre",{staticClass:"language-python"},[i("code",[t._v("\n"),i("span",{staticClass:"token keyword"},[t._v("def")]),t._v(" "),i("span",{staticClass:"ident"},[t._v("compile")]),t._v(" ("),t._v("\n  self,\n  **extras,\n)  -> ~T\n")]),t._v("\n")])])]),t._v(" "),i("dd",[i("p",[t._v("Using the wrapped configuration and the input dimension, generates a\ninstance of type T representing the layer configuration")])])])])}),[],!1,null,null,null);a.default=o.exports}}]);