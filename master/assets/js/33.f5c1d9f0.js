(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{438:function(e,t,a){"use strict";a.r(t);var s=a(26),l=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"biome-text-mlflow-model"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#biome-text-mlflow-model"}},[e._v("#")]),e._v(" biome.text.mlflow_model "),a("Badge",{attrs:{text:"Module"}})],1),e._v(" "),a("div"),e._v(" "),a("p",[e._v("Docstring for the mlflow_model.py module")]),e._v(" "),a("p",[e._v("This module is only used by MLFlow internally for loading a Pipeline as MLFlow model from an MLFlow Tracking server.")]),e._v(" "),a("div"),e._v(" "),a("pre",{staticClass:"title"},[a("h2",{attrs:{id:"biometextmodel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#biometextmodel"}},[e._v("#")]),e._v(" BiomeTextModel "),a("Badge",{attrs:{text:"Class"}})],1),e._v("\n")]),e._v(" "),a("pre",{staticClass:"language-python"},[a("code",[e._v("\n"),a("span",{staticClass:"token keyword"},[e._v("class")]),e._v(" "),a("span",{staticClass:"ident"},[e._v("BiomeTextModel")]),e._v(" (pipeline: "),a("a",{attrs:{title:"biome.text.pipeline.Pipeline",href:"pipeline.html#biome.text.pipeline.Pipeline"}},[e._v("Pipeline")]),e._v(")"),e._v("\n")]),e._v("\n")]),e._v(" "),a("dl",[a("pre",{staticClass:"title"},[a("h3",{attrs:{id:"predict"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#predict"}},[e._v("#")]),e._v(" predict "),a("Badge",{attrs:{text:"Method"}})],1),e._v("\n")]),e._v(" "),a("dt",[a("div",{staticClass:"language-python extra-class"},[a("pre",{staticClass:"language-python"},[a("code",[e._v("\n"),a("span",{staticClass:"token keyword"},[e._v("def")]),e._v(" "),a("span",{staticClass:"ident"},[e._v("predict")]),e._v(" ("),e._v("\n  self,\n  dataframe: pandas.core.frame.DataFrame,\n) \n")]),e._v("\n")])])]),e._v(" "),a("dd")])])}),[],!1,null,null,null);t.default=l.exports}}]);