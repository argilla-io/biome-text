# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = biome
description = Biome plaftform for deep learning models
author = Francisco Aranda
author-email = francisco@recogn.ai
license = mit
url = https://pyscaffold.org/
long-description = file: README.md
# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python

[options]
zip_safe = False
packages = find:
include_package_data = True
package_dir =
    =.
# DON'T CHANGE THE FOLLOWING LINE! IT WILL BE UPDATED BY PYSCAFFOLD!
setup_requires = pyscaffold>=3.1a0,<3.2a0
# Add here dependencies of your project (semicolon/line-separated), e.g.
install_requires =
    Flask>=1.0.0,<2.0.0
    Flask-Cors>=3.0.0,<4.0.0
    cachey>=0.1,<0.2
    dask[complete]==1.0.0
    # interactive console input
    inquirer>=2.5.1,<2.6.0
    #-e git+https://github.com/recognai/python-elasticsearch-runner.git#egg=elasticsearch-runner
    # Json object flatten
    flatten_json>=0.1
    ujson==1.35
    # Logging deps
    coloredlogs
    s3fs>=0.1,<0.2
    tensorboard>=1.12
    elasticsearch>=6.0.0,<7.0.0
    # This fix spacy error with msgpack-pyton 0.5.5
    msgpack-python>=0.5
    psycopg2-binary>=2.7
    #allennlp==0.4.3
    allennlp>=0.7,<0.8
    fire>=0.1,<0.2
    sanic-cors==0.6.0
    gevent==1.3.6
    smart-open==1.7.1


# The usage of test_requires is discouraged, see `Dependency Management` docs
tests_require =
    nose>=1.3.7,<1.4
    coverage>=4.4,<5.0
    pytest-cov
# Require a specific Python version, e.g. Python 2.7 or >= 3.4
# python_requires = >=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*

[options.packages.find]
where = .
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install biome-allennlp[PDF]` like:
# PDF = ReportLab; RXP
# Add here test requirements (semicolon/line-separated)
testing =
    pytest
    pytest-cov

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = biome_allennlp.module:function
# For example:
# console_scripts =
#     fibonacci = biome_allennlp.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[test]
# py.test options when running `python setup.py test`
# addopts = --verbose
extras = True

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --cov biome_allennlp --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests

[aliases]
build = bdist_wheel
release = build upload

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = docs/_build

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 3.1
package = biome_allennlp
