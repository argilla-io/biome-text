(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{441:function(t,s,e){"use strict";e.r(s);var a=e(18),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"biome-text-dataset-readers-text-transforms"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#biome-text-dataset-readers-text-transforms"}},[t._v("#")]),t._v(" biome.text.dataset_readers.text_transforms "),e("Badge",{attrs:{text:"Module"}})],1),t._v(" "),e("dl",[e("h2",{attrs:{id:"biome.text.dataset_readers.text_transforms.TextTransforms"}},[t._v("TextTransforms "),e("Badge",{attrs:{text:"Class"}})],1),t._v(" "),e("dt",[e("div",{staticClass:"language-python extra-class"},[e("pre",{staticClass:"language-python"},[t._v("    "),e("code",[t._v("\n"),e("span",{staticClass:"token keyword"},[t._v("class")]),t._v(" "),e("span",{staticClass:"ident"},[t._v("TextTransforms")]),t._v(" (rules: List[str] = None)"),t._v("\n    ")])])])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"},[e("p",[t._v("This class defines some rules that can be applied to the text before it gets embedded in a "),e("code",[t._v("TextField")]),t._v(".")]),t._v(" "),e("p",[t._v("Each rule is a simple python class method that receives and returns a str.\nIt will be applied when an instance of this class is called.")]),t._v(" "),e("h2",{attrs:{id:"parameters"}},[t._v("Parameters")]),t._v(" "),e("dl",[e("dt",[e("strong",[e("code",[t._v("rules")])])]),t._v(" "),e("dd",[t._v("A list of class method names to be applied on calling the instance.")])]),t._v(" "),e("h2",{attrs:{id:"attributes"}},[t._v("Attributes")]),t._v(" "),e("dl",[e("dt",[e("strong",[e("code",[t._v("DEFAULT_RULES")])])]),t._v(" "),e("dd",[t._v("The default rules if the "),e("code",[t._v("rules")]),t._v(" parameter is not provided.")])])]),t._v(" "),e("h3",[t._v("Ancestors")]),t._v(" "),e("ul",{staticClass:"hlist"},[e("li",[t._v("allennlp.common.registrable.Registrable")]),t._v(" "),e("li",[t._v("allennlp.common.from_params.FromParams")])]),t._v(" "),e("h3",[t._v("Subclasses")]),t._v(" "),e("ul",{staticClass:"hlist"},[e("li",[e("a",{attrs:{title:"biome.text.dataset_readers.text_transforms.RmSpacesTransforms",href:"#biome.text.dataset_readers.text_transforms.RmSpacesTransforms"}},[t._v("RmSpacesTransforms")])])]),t._v(" "),e("h3",[t._v("Class variables")]),t._v(" "),e("dl",[e("dt",{attrs:{id:"biome.text.dataset_readers.text_transforms.TextTransforms.default_implementation"}},[e("code",{staticClass:"name"},[t._v("var "),e("span",{staticClass:"ident"},[t._v("default_implementation")]),t._v(" : str")])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"})]),t._v(" "),e("dt",{attrs:{id:"biome.text.dataset_readers.text_transforms.TextTransforms.DEFAULT_RULES"}},[e("code",{staticClass:"name"},[t._v("var "),e("span",{staticClass:"ident"},[t._v("DEFAULT_RULES")])])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"})])])]),t._v(" "),e("h2",{attrs:{id:"biome.text.dataset_readers.text_transforms.RmSpacesTransforms"}},[t._v("RmSpacesTransforms "),e("Badge",{attrs:{text:"Class"}})],1),t._v(" "),e("dt",[e("div",{staticClass:"language-python extra-class"},[e("pre",{staticClass:"language-python"},[t._v("    "),e("code",[t._v("\n"),e("span",{staticClass:"token keyword"},[t._v("class")]),t._v(" "),e("span",{staticClass:"ident"},[t._v("RmSpacesTransforms")]),t._v(" (rules: List[str] = None)"),t._v("\n    ")])])])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"},[e("p",[t._v("This class defines some rules that can be applied to the text before it gets embedded in a "),e("code",[t._v("TextField")]),t._v(".")]),t._v(" "),e("p",[t._v("Each rule is a simple python class method that receives and returns a str.\nIt will be applied when an instance of this class is called.")]),t._v(" "),e("h2",{attrs:{id:"parameters"}},[t._v("Parameters")]),t._v(" "),e("dl",[e("dt",[e("strong",[e("code",[t._v("rules")])])]),t._v(" "),e("dd",[t._v("A list of class method names to be applied on calling the instance.")])]),t._v(" "),e("h2",{attrs:{id:"attributes"}},[t._v("Attributes")]),t._v(" "),e("dl",[e("dt",[e("strong",[e("code",[t._v("DEFAULT_RULES")])])]),t._v(" "),e("dd",[t._v("The default rules if the "),e("code",[t._v("rules")]),t._v(" parameter is not provided.")])])]),t._v(" "),e("h3",[t._v("Ancestors")]),t._v(" "),e("ul",{staticClass:"hlist"},[e("li",[e("a",{attrs:{title:"biome.text.dataset_readers.text_transforms.TextTransforms",href:"#biome.text.dataset_readers.text_transforms.TextTransforms"}},[t._v("TextTransforms")])]),t._v(" "),e("li",[t._v("allennlp.common.registrable.Registrable")]),t._v(" "),e("li",[t._v("allennlp.common.from_params.FromParams")])]),t._v(" "),e("h3",[t._v("Subclasses")]),t._v(" "),e("ul",{staticClass:"hlist"},[e("li",[e("a",{attrs:{title:"biome.text.dataset_readers.text_transforms.Html2TextTransforms",href:"#biome.text.dataset_readers.text_transforms.Html2TextTransforms"}},[t._v("Html2TextTransforms")])])]),t._v(" "),e("h3",[t._v("Class variables")]),t._v(" "),e("dl",[e("dt",{attrs:{id:"biome.text.dataset_readers.text_transforms.RmSpacesTransforms.DEFAULT_RULES"}},[e("code",{staticClass:"name"},[t._v("var "),e("span",{staticClass:"ident"},[t._v("DEFAULT_RULES")])])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"})])]),t._v(" "),e("dl",[e("h3",{attrs:{id:"biome.text.dataset_readers.text_transforms.RmSpacesTransforms.strip_spaces"}},[t._v("strip_spaces "),e("Badge",{attrs:{text:"Static method"}})],1),t._v(" "),e("dt",[e("div",{staticClass:"language-python extra-class"},[e("pre",{staticClass:"language-python"},[e("code",[t._v("\n"),e("span",{staticClass:"token keyword"},[t._v("def")]),t._v(" "),e("span",{staticClass:"ident"},[t._v("strip_spaces")]),t._v("("),e("span",[t._v("text: str) -> str")]),t._v("\n")]),t._v("\n        ")])])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"},[e("p",[t._v("Strip leading and trailing spaces/new lines")])])]),t._v(" "),e("h3",{attrs:{id:"biome.text.dataset_readers.text_transforms.RmSpacesTransforms.rm_useless_spaces"}},[t._v("rm_useless_spaces "),e("Badge",{attrs:{text:"Static method"}})],1),t._v(" "),e("dt",[e("div",{staticClass:"language-python extra-class"},[e("pre",{staticClass:"language-python"},[e("code",[t._v("\n"),e("span",{staticClass:"token keyword"},[t._v("def")]),t._v(" "),e("span",{staticClass:"ident"},[t._v("rm_useless_spaces")]),t._v("("),e("span",[t._v("text: str) -> str")]),t._v("\n")]),t._v("\n        ")])])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"},[e("p",[t._v("Remove multiple spaces in "),e("code",[t._v("text")])])])])])]),t._v(" "),e("h2",{attrs:{id:"biome.text.dataset_readers.text_transforms.Html2TextTransforms"}},[t._v("Html2TextTransforms "),e("Badge",{attrs:{text:"Class"}})],1),t._v(" "),e("dt",[e("div",{staticClass:"language-python extra-class"},[e("pre",{staticClass:"language-python"},[t._v("    "),e("code",[t._v("\n"),e("span",{staticClass:"token keyword"},[t._v("class")]),t._v(" "),e("span",{staticClass:"ident"},[t._v("Html2TextTransforms")]),t._v(" (rules: List[str] = None)"),t._v("\n    ")])])])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"},[e("p",[t._v("This class defines some rules that can be applied to the text before it gets embedded in a "),e("code",[t._v("TextField")]),t._v(".")]),t._v(" "),e("p",[t._v("Each rule is a simple python class method that receives and returns a str.\nIt will be applied when an instance of this class is called.")]),t._v(" "),e("h2",{attrs:{id:"parameters"}},[t._v("Parameters")]),t._v(" "),e("dl",[e("dt",[e("strong",[e("code",[t._v("rules")])])]),t._v(" "),e("dd",[t._v("A list of class method names to be applied on calling the instance.")])]),t._v(" "),e("h2",{attrs:{id:"attributes"}},[t._v("Attributes")]),t._v(" "),e("dl",[e("dt",[e("strong",[e("code",[t._v("DEFAULT_RULES")])])]),t._v(" "),e("dd",[t._v("The default rules if the "),e("code",[t._v("rules")]),t._v(" parameter is not provided.")])])]),t._v(" "),e("h3",[t._v("Ancestors")]),t._v(" "),e("ul",{staticClass:"hlist"},[e("li",[e("a",{attrs:{title:"biome.text.dataset_readers.text_transforms.RmSpacesTransforms",href:"#biome.text.dataset_readers.text_transforms.RmSpacesTransforms"}},[t._v("RmSpacesTransforms")])]),t._v(" "),e("li",[e("a",{attrs:{title:"biome.text.dataset_readers.text_transforms.TextTransforms",href:"#biome.text.dataset_readers.text_transforms.TextTransforms"}},[t._v("TextTransforms")])]),t._v(" "),e("li",[t._v("allennlp.common.registrable.Registrable")]),t._v(" "),e("li",[t._v("allennlp.common.from_params.FromParams")])]),t._v(" "),e("h3",[t._v("Class variables")]),t._v(" "),e("dl",[e("dt",{attrs:{id:"biome.text.dataset_readers.text_transforms.Html2TextTransforms.DEFAULT_RULES"}},[e("code",{staticClass:"name"},[t._v("var "),e("span",{staticClass:"ident"},[t._v("DEFAULT_RULES")])])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"})])]),t._v(" "),e("dl",[e("h3",{attrs:{id:"biome.text.dataset_readers.text_transforms.Html2TextTransforms.fix_html"}},[t._v("fix_html "),e("Badge",{attrs:{text:"Static method"}})],1),t._v(" "),e("dt",[e("div",{staticClass:"language-python extra-class"},[e("pre",{staticClass:"language-python"},[e("code",[t._v("\n"),e("span",{staticClass:"token keyword"},[t._v("def")]),t._v(" "),e("span",{staticClass:"ident"},[t._v("fix_html")]),t._v("("),e("span",[t._v("text: str) -> str")]),t._v("\n")]),t._v("\n        ")])])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"},[e("p",[t._v("list of replacements in html code.\nI leave a link to the fastai version here as a reference:\n"),e("a",{attrs:{href:"https://docs.fast.ai/text.transform.html#fix_html"}},[t._v("https://docs.fast.ai/text.transform.html#fix_html")])])])]),t._v(" "),e("h3",{attrs:{id:"biome.text.dataset_readers.text_transforms.Html2TextTransforms.html_to_text"}},[t._v("html_to_text "),e("Badge",{attrs:{text:"Static method"}})],1),t._v(" "),e("dt",[e("div",{staticClass:"language-python extra-class"},[e("pre",{staticClass:"language-python"},[e("code",[t._v("\n"),e("span",{staticClass:"token keyword"},[t._v("def")]),t._v(" "),e("span",{staticClass:"ident"},[t._v("html_to_text")]),t._v("("),e("span",[t._v("text: str) -> str")]),t._v("\n")]),t._v("\n        ")])])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"},[e("p",[t._v("Extract text from a html doc with BeautifulSoup4")])])])]),t._v(" "),e("h3",[t._v("Inherited members")]),t._v(" "),e("ul",{staticClass:"hlist"},[e("li",[e("code",[e("b",[e("a",{attrs:{title:"biome.text.dataset_readers.text_transforms.RmSpacesTransforms",href:"#biome.text.dataset_readers.text_transforms.RmSpacesTransforms"}},[t._v("RmSpacesTransforms")])])]),t._v(":\n"),e("ul",{staticClass:"hlist"},[e("li",[e("code",[e("a",{attrs:{title:"biome.text.dataset_readers.text_transforms.RmSpacesTransforms.rm_useless_spaces",href:"#biome.text.dataset_readers.text_transforms.RmSpacesTransforms.rm_useless_spaces"}},[t._v("rm_useless_spaces")])])]),t._v(" "),e("li",[e("code",[e("a",{attrs:{title:"biome.text.dataset_readers.text_transforms.RmSpacesTransforms.strip_spaces",href:"#biome.text.dataset_readers.text_transforms.RmSpacesTransforms.strip_spaces"}},[t._v("strip_spaces")])])])])])])])])])}),[],!1,null,null,null);s.default=r.exports}}]);