(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{317:function(t,a,e){t.exports=e.p+"assets/img/text_classifier_explore_screenshot.b068fd60.png"},448:function(t,a,e){"use strict";e.r(a);var s=e(26),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"training-a-short-text-classifier-of-german-business-names"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#training-a-short-text-classifier-of-german-business-names"}},[t._v("#")]),t._v(" Training a short text classifier of German business names")]),t._v(" "),s("p",[s("a",{attrs:{target:"_blank",href:"https://www.recogn.ai/biome-text/documentation/tutorials/1-Training_a_text_classifier.html"}},[s("img",{staticClass:"icon",attrs:{src:"https://www.recogn.ai/biome-text/assets/img/biome-isotype.svg",width:"24"}})]),t._v(" "),s("a",{attrs:{href:"https://www.recogn.ai/biome-text/documentation/tutorials/1-Training_a_text_classifier.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("View on recogn.ai"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{target:"_blank",href:"https://colab.research.google.com/github/recognai/biome-text/blob/master/docs/docs/documentation/tutorials/1-Training_a_text_classifier.ipynb"}},[s("img",{staticClass:"icon",attrs:{src:"https://www.tensorflow.org/images/colab_logo_32px.png",width:"24"}})]),t._v(" "),s("a",{attrs:{href:"https://colab.research.google.com/github/recognai/biome-text/blob/master/docs/docs/documentation/tutorials/1-Training_a_text_classifier.ipynb",target:"_blank",rel:"noopener noreferrer"}},[t._v("Run in Google Colab"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{target:"_blank",href:"https://github.com/recognai/biome-text/blob/master/docs/docs/documentation/tutorials/1-Training_a_text_classifier.ipynb"}},[s("img",{staticClass:"icon",attrs:{src:"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",width:"24"}})]),t._v(" "),s("a",{attrs:{href:"https://github.com/recognai/biome-text/blob/master/docs/docs/documentation/tutorials/1-Training_a_text_classifier.ipynb",target:"_blank",rel:"noopener noreferrer"}},[t._v("View source on GitHub"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("In this tutorial we will train a basic short-text classifier for predicting the sector of a business based only on its business name.\nFor this we will use a training dataset with business names and business categories in German.")]),t._v(" "),s("p",[t._v("When running this tutorial in Google Colab, make sure to install "),s("em",[t._v("biome.text")]),t._v(" first:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("!pip install "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("U pip\n!pip install "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("U git"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v("github"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("recognai"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("biome"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git\n")])])]),s("p",[t._v("Ignore warnings and don't forget to restart your runtime afterwards ("),s("em",[t._v("Runtime -> Restart runtime")]),t._v(").")]),t._v(" "),s("p",[s("em",[t._v("If")]),t._v(" you want to log your runs with "),s("a",{attrs:{href:"https://wandb.ai/home",target:"_blank",rel:"noopener noreferrer"}},[t._v("WandB"),s("OutboundLink")],1),t._v(", don't forget to install its client and log in.")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("!pip install wandb\n!wandb login\n")])])]),s("h2",{attrs:{id:"explore-the-training-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#explore-the-training-data"}},[t._v("#")]),t._v(" Explore the training data")]),t._v(" "),s("p",[t._v("Let's take a look at the data we will use for training. For this we will use the "),s("a",{attrs:{href:"https://www.recogn.ai/biome-text/api/biome/text/dataset.html#dataset",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Dataset")]),s("OutboundLink")],1),t._v(" class that is a very thin wrapper around HuggingFace's awesome "),s("a",{attrs:{href:"https://huggingface.co/docs/datasets/master/package_reference/main_classes.html#datasets.Dataset",target:"_blank",rel:"noopener noreferrer"}},[t._v("datasets.Dataset"),s("OutboundLink")],1),t._v(". We will download the data first and create a "),s("code",[t._v("Dataset")]),t._v(" instance with it.")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" biome"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Dataset\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Downloading the dataset first")]),t._v("\n!curl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("O https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v("biome"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("tutorials"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("s3"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("eu"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("west"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("amazonaws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("text_classifier"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("business"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("train"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("csv\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Loading from local")]),t._v("\ntrain_ds "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Dataset"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("from_csv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"business.cat.train.csv"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Most of HuggingFace's "),s("code",[t._v("Dataset")]),t._v(" API is exposed and you can checkout their nice "),s("a",{attrs:{href:"https://huggingface.co/docs/datasets/master/processing.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("documentation"),s("OutboundLink")],1),t._v(" on how to work with data in a "),s("code",[t._v("Dataset")]),t._v(". For example, let's quickly check the size of our training data and print the first 10 examples as a pandas dataframe:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("train_ds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("8000\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" train_ds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("formatted_as"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pandas"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    display"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("train_ds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",[s("style",{attrs:{scoped:""}},[t._v('\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\x3c!--beforebegin--\x3e<div class="language- extra-class">\x3c!--afterbegin--\x3e<pre><code>.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}\n</code></pre>\n\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e')]),t._v(" "),s("table",{staticClass:"dataframe",attrs:{border:"1"}},[s("thead",[s("tr",{staticStyle:{"text-align":"right"}},[s("th"),t._v(" "),s("th",[t._v("label")]),t._v(" "),s("th",[t._v("text")])])]),t._v(" "),s("tbody",[s("tr",[s("th",[t._v("0")]),t._v(" "),s("td",[t._v("Edv")]),t._v(" "),s("td",[t._v("Cse Gmbh Computer Edv-service Bürobedarf")])]),t._v(" "),s("tr",[s("th",[t._v("1")]),t._v(" "),s("td",[t._v("Maler")]),t._v(" "),s("td",[t._v("Malerfachbetrieb U. Nee")])]),t._v(" "),s("tr",[s("th",[t._v("2")]),t._v(" "),s("td",[t._v("Gebrauchtwagen")]),t._v(" "),s("td",[t._v("Sippl Automobilverkäufer Hausmann")])]),t._v(" "),s("tr",[s("th",[t._v("3")]),t._v(" "),s("td",[t._v("Handelsvermittler Und -vertreter")]),t._v(" "),s("td",[t._v("Strenge Handelsagentur Werth")])]),t._v(" "),s("tr",[s("th",[t._v("4")]),t._v(" "),s("td",[t._v("Gebrauchtwagen")]),t._v(" "),s("td",[t._v("Dzengel Autohaus Gordemitz Rusch")])]),t._v(" "),s("tr",[s("th",[t._v("5")]),t._v(" "),s("td",[t._v("Apotheken")]),t._v(" "),s("td",[t._v("Schinkel-apotheke Bitzer")])]),t._v(" "),s("tr",[s("th",[t._v("6")]),t._v(" "),s("td",[t._v("Tiefbau")]),t._v(" "),s("td",[t._v("Franz Möbius Mehrings-bau-hude Und Stigge")])]),t._v(" "),s("tr",[s("th",[t._v("7")]),t._v(" "),s("td",[t._v("Handelsvermittler Und -vertreter")]),t._v(" "),s("td",[t._v("Kontze Hdl.vertr. Lau")])]),t._v(" "),s("tr",[s("th",[t._v("8")]),t._v(" "),s("td",[t._v("Autowerkstätten")]),t._v(" "),s("td",[t._v("Keßler Kfz-handel")])]),t._v(" "),s("tr",[s("th",[t._v("9")]),t._v(" "),s("td",[t._v("Gebrauchtwagen")]),t._v(" "),s("td",[t._v("Diko Lack Und Schrift Betriebsteil Der Autocen...")])])])])]),t._v(" "),s("p",[t._v("As we can see we have two relevant columns "),s("em",[t._v("label")]),t._v(" and "),s("em",[t._v("text")]),t._v(". Our classifier will be trained to predict the "),s("em",[t._v("label")]),t._v(" given the "),s("em",[t._v("text")]),t._v(".")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Tip")]),t._v(" "),s("p",[t._v("The "),s("a",{attrs:{href:"https://www.recogn.ai/biome-text/api/biome/text/modules/heads/task_head.html#taskhead",target:"_blank",rel:"noopener noreferrer"}},[t._v("TaskHead"),s("OutboundLink")],1),t._v(" of our model below will expect a "),s("em",[t._v("text")]),t._v(" and a "),s("em",[t._v("label")]),t._v(" column to be present in the "),s("code",[t._v("Dataset")]),t._v(". In our dataset this is already the case, otherwise we would need to change or map the corresponding column names via "),s("code",[t._v("Dataset.rename_column_()")]),t._v(" or "),s("code",[t._v("Dataset.map()")]),t._v(".")])]),t._v(" "),s("p",[t._v("We can also quickly check the distibution of our labels:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" train_ds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("formatted_as"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pandas"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    display"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("train_ds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"label"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value_counts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("Unternehmensberatungen              632\nFriseure                            564\nTiefbau                             508\nDienstleistungen                    503\nGebrauchtwagen                      449\nElektriker                          430\nRestaurants                         422\nArchitekturbüros                    417\nVereine                             384\nVersicherungsvermittler             358\nMaler                               330\nSanitärinstallationen               323\nEdv                                 318\nWerbeagenturen                      294\nApotheken                           289\nPhysiotherapie                      286\nVermittlungen                       277\nHotels                              274\nAutowerkstätten                     263\nElektrotechnik                      261\nAllgemeinärzte                      216\nHandelsvermittler Und -vertreter    202\nName: label, dtype: int64\n")])])]),s("p",[t._v("The "),s("code",[t._v("Dataset")]),t._v(" class also provides access to Hugging Face's extensive NLP datasets collection via the "),s("code",[t._v("Dataset.load_dataset()")]),t._v(" method. Have a look at their "),s("a",{attrs:{href:"https://huggingface.co/docs/datasets/master/quicktour.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("quicktour"),s("OutboundLink")],1),t._v(" for more details about their awesome library.")]),t._v(" "),s("h2",{attrs:{id:"configure-your-biome-text-pipeline"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configure-your-biome-text-pipeline"}},[t._v("#")]),t._v(" Configure your "),s("em",[t._v("biome.text")]),t._v(" Pipeline")]),t._v(" "),s("p",[t._v("A typical "),s("a",{attrs:{href:"https://www.recogn.ai/biome-text/api/biome/text/pipeline.html#pipeline",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pipeline"),s("OutboundLink")],1),t._v(" consists of tokenizing the input, extracting features, applying a language encoding (optionally) and executing a task-specific head in the end.")]),t._v(" "),s("p",[t._v("After training a pipeline, you can use it to make predictions or explore the underlying model via the explore UI.")]),t._v(" "),s("p",[t._v("As a first step we must define a configuration for our pipeline.\nIn this tutorial we will create a configuration dictionary and use the "),s("code",[t._v("Pipeline.from_config()")]),t._v(" method to create our pipeline, but there are "),s("a",{attrs:{href:"https://www.recogn.ai/biome-text/api/biome/text/pipeline.html#pipeline",target:"_blank",rel:"noopener noreferrer"}},[t._v("other ways"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("A "),s("em",[t._v("biome.text")]),t._v(" pipeline has the following main components:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# a descriptive name of your pipeline")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tokenizer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# how to tokenize the input")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("features")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# input features of the model")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("encoder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the language encoder")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("head")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# your task configuration")]),t._v("\n\n")])])]),s("p",[t._v("See the "),s("a",{attrs:{href:"https://www.recogn.ai/biome-text/documentation/user-guides/2-configuration.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Configuration section"),s("OutboundLink")],1),t._v(" for a detailed description of how these main components can be configured.")]),t._v(" "),s("p",[t._v("Our complete configuration for this tutorial will be following:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("pipeline_dict "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"german_business_names"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tokenizer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text_cleaning"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rules"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"strip_spaces"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"features"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"word"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"embedding_dim"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lowercase_tokens"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"char"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"embedding_dim"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lowercase_characters"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"encoder"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gru"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"num_layers"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hidden_size"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bidirectional"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dropout"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"head"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TextClassification"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"labels"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" train_ds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("unique"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"label"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pooler"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gru"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"num_layers"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hidden_size"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bidirectional"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"feedforward"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"num_layers"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hidden_dims"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"activations"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"relu"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dropout"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("       \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("With this dictionary we can now create a "),s("code",[t._v("Pipeline")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" biome"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Pipeline\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("pl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Pipeline"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("from_config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pipeline_dict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"create-a-vocabulary"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-a-vocabulary"}},[t._v("#")]),t._v(" Create a vocabulary")]),t._v(" "),s("p",[t._v("Before we can start the training we need to create the vocabulary for our model.\nFor this we define a "),s("code",[t._v("VocabularyConfiguration")]),t._v(".")]),t._v(" "),s("p",[t._v('In our business name classifier we only want to include words with a general meaning to our word feature vocabulary (like "Computer" or "Autohaus", for example), and want to exclude specific names that will not help to generally classify the kind of business.\nThis can be achieved by including only the most frequent words in our training set via the '),s("code",[t._v("min_count")]),t._v(" argument. For a complete list of available arguments see the "),s("a",{attrs:{href:"https://www.recogn.ai/biome-text/api/biome/text/configuration.html#vocabularyconfiguration",target:"_blank",rel:"noopener noreferrer"}},[t._v("VocabularyConfiguration API"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" biome"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("configuration "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" VocabularyConfiguration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" WordFeatures\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("vocab_config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" VocabularyConfiguration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sources"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("train_ds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" min_count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("WordFeatures"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("namespace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("We then pass this configuration to our "),s("code",[t._v("Pipeline")]),t._v(" to create the vocabulary:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("pl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("create_vocabulary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vocab_config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("After creating the vocabulary we can check the size of our entire model in terms of trainable parameters:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("pl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num_trainable_parameters\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("60566\n")])])]),s("h2",{attrs:{id:"configure-the-trainer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configure-the-trainer"}},[t._v("#")]),t._v(" Configure the trainer")]),t._v(" "),s("p",[t._v("As a next step we have to configure the "),s("em",[t._v("trainer")]),t._v(".")]),t._v(" "),s("p",[t._v("The default trainer has sensible defaults and should work alright for most of your cases.\nIn this tutorial, however, we want to tune a bit the learning rate and limit the training time to three epochs only.\nFor a complete list of available arguments see the "),s("a",{attrs:{href:"https://www.recogn.ai/biome-text/api/biome/text/configuration.html#trainerconfiguration",target:"_blank",rel:"noopener noreferrer"}},[t._v("TrainerConfiguration API"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Tip")]),t._v(" "),s("p",[t._v("By default we will use a CUDA device if one is available. If you have several devices or prefer not to use it, you can specify it here via the "),s("code",[t._v("cuda_device")]),t._v(" argument.")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" biome"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("configuration "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" TrainerConfiguration\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("trainer_config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TrainerConfiguration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    optimizer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"adam"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lr"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.01")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    num_epochs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"train-your-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#train-your-model"}},[t._v("#")]),t._v(" Train your model")]),t._v(" "),s("p",[t._v("Now we have everything ready to start the training of our model:")]),t._v(" "),s("ul",[s("li",[t._v("training data set")]),t._v(" "),s("li",[t._v("vocabulary")]),t._v(" "),s("li",[t._v("trainer")])]),t._v(" "),s("p",[t._v("Optionally we can provide a validation data set to estimate the generalization error.\nFor this we will create another "),s("code",[t._v("Dataset")]),t._v(" pointing to our validation data.")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("!curl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("O https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v("biome"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("tutorials"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("s3"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("eu"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("west"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("amazonaws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("text_classifier"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("business"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("valid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("csv\n\nvalid_ds "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Dataset"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("from_csv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"business.cat.valid.csv"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("The training output will be saved in a folder specified by the "),s("code",[t._v("output")]),t._v(" argument. It contains the trained model weights and the metrics, as well as the vocabulary and a "),s("em",[t._v("log")]),t._v(" folder for visualizing the training process with "),s("a",{attrs:{href:"https://www.tensorflow.org/tensorboard/",target:"_blank",rel:"noopener noreferrer"}},[t._v("tensorboard"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("pl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("train"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    output"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"output"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    training"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("train_ds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    validation"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("valid_ds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    trainer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("trainer_config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("After 3 epochs we achieve a validation accuracy of about 0.91.\nThe validation loss seems to be decreasing further, though, so we could probably train the model for a few more epochs without the risk of overfitting.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Tip")]),t._v(" "),s("p",[t._v("If for some reason the training gets interrupted, you can continue where you left off by setting the "),s("code",[t._v("restore")]),t._v(" argument in the "),s("code",[t._v("Pipeline.train()")]),t._v(" method to "),s("code",[t._v("True")]),t._v(".\nIf you want to train your model for a few more epochs, you can also use the "),s("code",[t._v("restore")]),t._v(" argument, but you have to modify the "),s("code",[t._v("epochs")]),t._v(" argument in your "),s("code",[t._v("TrainerConfiguration")]),t._v(" to reflect the total amount of epochs you aim for.")])]),t._v(" "),s("h2",{attrs:{id:"make-your-first-predictions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#make-your-first-predictions"}},[t._v("#")]),t._v(" Make your first predictions")]),t._v(" "),s("p",[t._v("Now that we trained our model we can go on to make our first predictions.\nFirst we must load our trained model into a new "),s("code",[t._v("Pipeline")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("pl_trained "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Pipeline"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("from_pretrained"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"output/model.tar.gz"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("We then provide the input expected by our "),s("code",[t._v("TaskHead")]),t._v(" of the model to the "),s("code",[t._v("Pipeline.predict()")]),t._v(" method.\nIn our case it is a "),s("code",[t._v("TextClassification")]),t._v(" head that classifies a "),s("code",[t._v("text")]),t._v(" input:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("pl_trained"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("predict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Autohaus biome.text"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("The returned dictionary contains the logits and probabilities of all labels (classes).\nThe label with the highest probability is stored under the "),s("code",[t._v("label")]),t._v(" key, together with its probability under the "),s("code",[t._v("prob")]),t._v(" key.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Tip")]),t._v(" "),s("p",[t._v("When configuring the pipeline in the first place, we recommend to check that it is correctly setup by using the "),s("code",[t._v("predict")]),t._v(" method.\nSince the pipeline is still not trained at that moment, the predictions will be arbitrary.")])]),t._v(" "),s("h2",{attrs:{id:"explore-the-model-s-predictions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#explore-the-model-s-predictions"}},[t._v("#")]),t._v(" Explore the model's predictions")]),t._v(" "),s("p",[t._v("To check and understand the predictions of the model, we can use the "),s("strong",[t._v("biome.text explore UI")]),t._v(".\nJust calling the "),s("a",{attrs:{href:"https://www.recogn.ai/biome-text/api/biome/text/pipeline.html#predict",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pipeline.predict"),s("OutboundLink")],1),t._v(" method will open the UI in the output of our cell.\nWe will set the "),s("code",[t._v("explain")]),t._v(" argument to true, which automatically visualizes the attribution of each token by means of "),s("a",{attrs:{href:"https://arxiv.org/abs/1703.01365",target:"_blank",rel:"noopener noreferrer"}},[t._v("integrated gradients"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("Warning")]),t._v(" "),s("p",[t._v("For the UI to work you need a running "),s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/install-elasticsearch.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Elasticsearch"),s("OutboundLink")],1),t._v(" instance.\nWe recommend installing "),s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/7.7/docker.html#docker-cli-run-dev-mode",target:"_blank",rel:"noopener noreferrer"}},[t._v("Elasticsearch with docker"),s("OutboundLink")],1),t._v(".")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" biome"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" explore\n\nexplore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("create"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pl_trained"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" valid_ds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" explain"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:e(317),alt:"Screenshot of the biome.text explore UI"}}),t._v(" "),s("em",[t._v("Screenshot of the biome.text explore UI")])]),t._v(" "),s("p",[t._v('Exploring our model we could take advantage of the F1 scores of each label to figure out which labels to prioritize when gathering new training data.\nFor example, although "Allgemeinärzte" is the second rarest label in our training data, it still seems relatively easy to classify for our model due to the distinctive words "Dr." and "Allgemeinmedizin".')])])}),[],!1,null,null,null);a.default=n.exports}}]);