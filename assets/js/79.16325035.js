(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{347:function(e,t,i){"use strict";i.r(t);var s=i(33),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"biome-text-pipelines-explore"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#biome-text-pipelines-explore"}},[e._v("#")]),e._v(" biome.text.pipelines.explore "),i("Badge",{attrs:{text:"Module"}})],1),e._v(" "),i("dl",[i("h3",{attrs:{id:"biome.text.pipelines.explore.pipeline_predictions"}},[e._v("pipeline_predictions "),i("Badge",{attrs:{text:"Function"}})],1),e._v(" "),i("dt",[i("div",{staticClass:"language-python extra-class"},[i("pre",{staticClass:"language-python"},[i("code",[e._v("\n"),i("span",{staticClass:"token keyword"},[e._v("def")]),e._v(" "),i("span",{staticClass:"ident"},[e._v("pipeline_predictions")]),e._v(" ("),e._v("\n   pipeline: "),i("a",{attrs:{title:"biome.text.pipelines.pipeline.Pipeline",href:"pipeline.html#biome.text.pipelines.pipeline.Pipeline"}},[e._v("Pipeline")]),e._v(",\n   source_path: str,\n   config: "),i("a",{attrs:{title:"biome.text.pipelines.defs.ExploreConfig",href:"defs.html#biome.text.pipelines.defs.ExploreConfig"}},[e._v("ExploreConfig")]),e._v(",\n   es_config: "),i("a",{attrs:{title:"biome.text.pipelines.defs.ElasticsearchConfig",href:"defs.html#biome.text.pipelines.defs.ElasticsearchConfig"}},[e._v("ElasticsearchConfig")]),e._v(",\n)  -> dask.dataframe.core.DataFrame\n")]),e._v("\n        ")])])]),e._v(" "),i("dd",[i("div",{staticClass:"desc"},[i("p",[e._v("Read a data source and tries to apply a model predictions to the whole data source. The\nresults will be persisted into an elasticsearch index for further data exploration")])])]),e._v(" "),i("h3",{attrs:{id:"biome.text.pipelines.explore.register_biome_prediction"}},[e._v("register_biome_prediction "),i("Badge",{attrs:{text:"Function"}})],1),e._v(" "),i("dt",[i("div",{staticClass:"language-python extra-class"},[i("pre",{staticClass:"language-python"},[i("code",[e._v("\n"),i("span",{staticClass:"token keyword"},[e._v("def")]),e._v(" "),i("span",{staticClass:"ident"},[e._v("register_biome_prediction")]),e._v(" ("),e._v("\n   name: str,\n   pipeline: "),i("a",{attrs:{title:"biome.text.pipelines.pipeline.Pipeline",href:"pipeline.html#biome.text.pipelines.pipeline.Pipeline"}},[e._v("Pipeline")]),e._v(",\n   es_config: "),i("a",{attrs:{title:"biome.text.pipelines.defs.ElasticsearchConfig",href:"defs.html#biome.text.pipelines.defs.ElasticsearchConfig"}},[e._v("ElasticsearchConfig")]),e._v(",\n   **kwargs,\n) \n")]),e._v("\n        ")])])]),e._v(" "),i("dd",[i("div",{staticClass:"desc"},[i("p",[e._v("Creates a new metadata entry for the incoming prediction")]),e._v(" "),i("h2",{attrs:{id:"parameters"}},[e._v("Parameters")]),e._v(" "),i("dl",[i("dt",[i("strong",[i("code",[e._v("name")])])]),e._v(" "),i("dd",[e._v("A descriptive prediction name")]),e._v(" "),i("dt",[i("strong",[i("code",[e._v("pipeline")])])]),e._v(" "),i("dd",[e._v("The pipeline used for the prediction batch")]),e._v(" "),i("dt",[e._v("es_config:")]),e._v(" "),i("dt",[e._v("The Elasticsearch configuration data")]),e._v(" "),i("dt",[i("strong",[i("code",[e._v("kwargs")])])]),e._v(" "),i("dd",[e._v("Extra arguments passed as extra metadata info")])])])])])])}),[],!1,null,null,null);t.default=a.exports}}]);