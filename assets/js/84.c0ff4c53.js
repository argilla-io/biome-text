(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{400:function(a,t,e){"use strict";e.r(t);var l=e(26),s=Object(l.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"biome-text-pipelines-learn-allennlp-callbacks-evaluate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#biome-text-pipelines-learn-allennlp-callbacks-evaluate"}},[a._v("#")]),a._v(" biome.text.pipelines.learn.allennlp.callbacks.evaluate "),e("Badge",{attrs:{text:"Module"}})],1),a._v(" "),e("dl",[e("h2",{attrs:{id:"biome.text.pipelines.learn.allennlp.callbacks.evaluate.EvaluateCallback"}},[a._v("EvaluateCallback "),e("Badge",{attrs:{text:"Class"}})],1),a._v(" "),e("dt",[e("div",{staticClass:"language-python extra-class"},[e("pre",{staticClass:"language-python"},[a._v("    "),e("code",[a._v("\n"),e("span",{staticClass:"token keyword"},[a._v("class")]),a._v(" "),e("span",{staticClass:"ident"},[a._v("EvaluateCallback")]),a._v(" (serialization_dir: str)"),a._v("\n    ")])])])]),a._v(" "),e("dd",[e("div",{staticClass:"desc"},[e("p",[a._v("This callback allows to a callback trainer evaluate the model against a test dataset")]),a._v(" "),e("h2",{attrs:{id:"attributes"}},[a._v("Attributes")]),a._v(" "),e("p",[a._v("serialization_dir:str\nThe experiment folder")])]),a._v(" "),e("h3",[a._v("Ancestors")]),a._v(" "),e("ul",{staticClass:"hlist"},[e("li",[a._v("allennlp.training.callbacks.callback.Callback")]),a._v(" "),e("li",[a._v("allennlp.common.registrable.Registrable")]),a._v(" "),e("li",[a._v("allennlp.common.from_params.FromParams")])]),a._v(" "),e("dl",[e("h3",{attrs:{id:"biome.text.pipelines.learn.allennlp.callbacks.evaluate.EvaluateCallback.evaluate_dataset"}},[a._v("evaluate_dataset "),e("Badge",{attrs:{text:"Method"}})],1),a._v(" "),e("dt",[e("div",{staticClass:"language-python extra-class"},[e("pre",{staticClass:"language-python"},[e("code",[a._v("\n"),e("span",{staticClass:"token keyword"},[a._v("def")]),a._v(" "),e("span",{staticClass:"ident"},[a._v("evaluate_dataset")]),a._v(" ("),a._v("\n   self,\n   trainer: allennlp.training.callback_trainer.CallbackTrainer,\n)  -> NoneType\n")]),a._v("\n        ")])])]),a._v(" "),e("dd",[e("div",{staticClass:"desc"},[e("p",[a._v("This method launches an test dataset (if defined) evaluation when the training ends\nand adds the test metrics to trainer metrics before they are processed (thanks to priority argument)")]),a._v(" "),e("h2",{attrs:{id:"parameters"}},[a._v("Parameters")]),a._v(" "),e("p",[a._v("trainer:CallbackTrainer\nThe main callback trainer")])])])])])])])}),[],!1,null,null,null);t.default=s.exports}}]);