(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{359:function(t,e,a){"use strict";a.r(e);var s=a(18),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"biome-text-predictors-default-predictor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#biome-text-predictors-default-predictor"}},[t._v("#")]),t._v(" biome.text.predictors.default_predictor "),a("Badge",{attrs:{text:"Module"}})],1),t._v(" "),a("dl",[a("h2",{attrs:{id:"biome.text.predictors.default_predictor.DefaultBasePredictor"}},[t._v("DefaultBasePredictor "),a("Badge",{attrs:{text:"Class"}})],1),t._v(" "),a("dt",[a("div",{staticClass:"language-python extra-class"},[a("pre",{staticClass:"language-python"},[t._v("    "),a("code",[t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("class")]),t._v(" "),a("span",{staticClass:"ident"},[t._v("DefaultBasePredictor")]),t._v(" (model: allennlp.models.model.Model, dataset_reader: "),a("a",{attrs:{title:"biome.text.dataset_readers.datasource_reader.DataSourceReader",href:"../dataset_readers/datasource_reader.html#biome.text.dataset_readers.datasource_reader.DataSourceReader"}},[t._v("DataSourceReader")]),t._v(")"),t._v("\n    ")])])])]),t._v(" "),a("dd",[a("div",{staticClass:"desc"},[a("p",[t._v("a "),a("code",[t._v("Predictor")]),t._v(" is a thin wrapper around an AllenNLP model that handles JSON -> JSON predictions\nthat can be used for serving models through the web API or making predictions in bulk.")])]),t._v(" "),a("h3",[t._v("Ancestors")]),t._v(" "),a("ul",{staticClass:"hlist"},[a("li",[t._v("allennlp.predictors.predictor.Predictor")]),t._v(" "),a("li",[t._v("allennlp.common.registrable.Registrable")]),t._v(" "),a("li",[t._v("allennlp.common.from_params.FromParams")])]),t._v(" "),a("dl",[a("h3",{attrs:{id:"biome.text.predictors.default_predictor.DefaultBasePredictor.predict_json"}},[t._v("predict_json "),a("Badge",{attrs:{text:"Method"}})],1),t._v(" "),a("dt",[a("div",{staticClass:"language-python extra-class"},[a("pre",{staticClass:"language-python"},[a("code",[t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("def")]),t._v(" "),a("span",{staticClass:"ident"},[t._v("predict_json")]),t._v(" ("),t._v("\n   self,\n   inputs: Dict[str, Any],\n)  -> Dict[str, Any]\n")]),t._v("\n        ")])])]),t._v(" "),a("dd",[a("div",{staticClass:"desc"})]),t._v(" "),a("h3",{attrs:{id:"biome.text.predictors.default_predictor.DefaultBasePredictor.predict_batch_json"}},[t._v("predict_batch_json "),a("Badge",{attrs:{text:"Method"}})],1),t._v(" "),a("dt",[a("div",{staticClass:"language-python extra-class"},[a("pre",{staticClass:"language-python"},[a("code",[t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("def")]),t._v(" "),a("span",{staticClass:"ident"},[t._v("predict_batch_json")]),t._v(" ("),t._v("\n   self,\n   inputs: List[Dict[str, Any]],\n)  -> List[Dict[str, Any]]\n")]),t._v("\n        ")])])]),t._v(" "),a("dd",[a("div",{staticClass:"desc"})])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);