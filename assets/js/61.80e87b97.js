(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{370:function(e,t,a){"use strict";a.r(t);var s=a(26),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"biome-text-dataset-readers-sequence-classifier-dataset-reader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#biome-text-dataset-readers-sequence-classifier-dataset-reader"}},[e._v("#")]),e._v(" biome.text.dataset_readers.sequence_classifier_dataset_reader "),a("Badge",{attrs:{text:"Module"}})],1),e._v(" "),a("dl",[a("h2",{attrs:{id:"biome.text.dataset_readers.sequence_classifier_dataset_reader.SequenceClassifierReader"}},[e._v("SequenceClassifierReader "),a("Badge",{attrs:{text:"Class"}})],1),e._v(" "),a("dt",[a("div",{staticClass:"language-python extra-class"},[a("pre",{staticClass:"language-python"},[e._v("    "),a("code",[e._v("\n"),a("span",{staticClass:"token keyword"},[e._v("class")]),e._v(" "),a("span",{staticClass:"ident"},[e._v("SequenceClassifierReader")]),e._v(" ("),e._v("\n    "),a("span",[e._v("tokenizer: allennlp.data.tokenizers.tokenizer.Tokenizer = None")]),a("span",[e._v(",")]),e._v("\n    "),a("span",[e._v("token_indexers: Dict[str, allennlp.data.token_indexers.token_indexer.TokenIndexer] = None")]),a("span",[e._v(",")]),e._v("\n    "),a("span",[e._v("segment_sentences: Union[bool, allennlp.data.tokenizers.sentence_splitter.SentenceSplitter] = False")]),a("span",[e._v(",")]),e._v("\n    "),a("span",[e._v("as_text_field: bool = True")]),a("span",[e._v(",")]),e._v("\n    "),a("span",[e._v("skip_empty_tokens: bool = False")]),a("span",[e._v(",")]),e._v("\n    "),a("span",[e._v("max_sequence_length: int = None")]),a("span",[e._v(",")]),e._v("\n    "),a("span",[e._v("max_nr_of_sentences: int = None")]),a("span",[e._v(",")]),e._v("\n    "),a("span",[e._v("text_transforms: "),a("a",{attrs:{title:"biome.text.dataset_readers.text_transforms.TextTransforms",href:"text_transforms.html#biome.text.dataset_readers.text_transforms.TextTransforms"}},[e._v("TextTransforms")]),e._v(" = None")]),a("span",[e._v(",")]),e._v("\n"),a("span",[e._v(")")]),e._v("\n    ")])])])]),e._v(" "),a("dd",[a("div",{staticClass:"desc"},[a("p",[e._v("A DatasetReader for the SequenceClassifier model.")])]),e._v(" "),a("h3",[e._v("Ancestors")]),e._v(" "),a("ul",{staticClass:"hlist"},[a("li",[a("a",{attrs:{title:"biome.text.dataset_readers.datasource_reader.DataSourceReader",href:"datasource_reader.html#biome.text.dataset_readers.datasource_reader.DataSourceReader"}},[e._v("DataSourceReader")])]),e._v(" "),a("li",[e._v("allennlp.data.dataset_readers.dataset_reader.DatasetReader")]),e._v(" "),a("li",[e._v("allennlp.common.registrable.Registrable")]),e._v(" "),a("li",[e._v("allennlp.common.from_params.FromParams")]),e._v(" "),a("li",[a("a",{attrs:{title:"biome.text.dataset_readers.mixins.CacheableMixin",href:"mixins.html#biome.text.dataset_readers.mixins.CacheableMixin"}},[e._v("CacheableMixin")])])]),e._v(" "),a("dl",[a("h3",{attrs:{id:"biome.text.dataset_readers.sequence_classifier_dataset_reader.SequenceClassifierReader.text_to_instance"}},[e._v("text_to_instance "),a("Badge",{attrs:{text:"Method"}})],1),e._v(" "),a("dt",[a("div",{staticClass:"language-python extra-class"},[a("pre",{staticClass:"language-python"},[a("code",[e._v("\n"),a("span",{staticClass:"token keyword"},[e._v("def")]),e._v(" "),a("span",{staticClass:"ident"},[e._v("text_to_instance")]),e._v(" ("),e._v("\n   self,\n   tokens: Union[str, List[str], dict],\n   label: Union[str, NoneType] = None,\n)  -> Union[allennlp.data.instance.Instance, NoneType]\n")]),e._v("\n        ")])])]),e._v(" "),a("dd",[a("div",{staticClass:"desc"},[a("p",[e._v("Extracts the forward parameters from the example and transforms them to an "),a("code",[e._v("Instance")])]),e._v(" "),a("h2",{attrs:{id:"parameters"}},[e._v("Parameters")]),e._v(" "),a("dl",[a("dt",[a("strong",[a("code",[e._v("tokens")])])]),e._v(" "),a("dd",[e._v("The input tokens key,values (or the text string)")]),e._v(" "),a("dt",[a("strong",[a("code",[e._v("label")])])]),e._v(" "),a("dd",[e._v("The label value")])]),e._v(" "),a("h2",{attrs:{id:"returns"}},[e._v("Returns")]),e._v(" "),a("dl",[a("dt",[a("code",[e._v("instance")])]),e._v(" "),a("dd",[e._v("Returns "),a("code",[e._v("None")]),e._v(" if cannot generate an new Instance.")])])])])]),e._v(" "),a("h3",[e._v("Inherited members")]),e._v(" "),a("ul",{staticClass:"hlist"},[a("li",[a("code",[a("b",[a("a",{attrs:{title:"biome.text.dataset_readers.datasource_reader.DataSourceReader",href:"datasource_reader.html#biome.text.dataset_readers.datasource_reader.DataSourceReader"}},[e._v("DataSourceReader")])])]),e._v(":\n"),a("ul",{staticClass:"hlist"},[a("li",[a("code",[a("a",{attrs:{title:"biome.text.dataset_readers.datasource_reader.DataSourceReader.build_textfield",href:"datasource_reader.html#biome.text.dataset_readers.datasource_reader.DataSourceReader.build_textfield"}},[e._v("build_textfield")])])]),e._v(" "),a("li",[a("code",[a("a",{attrs:{title:"biome.text.dataset_readers.datasource_reader.DataSourceReader.get",href:"mixins.html#biome.text.dataset_readers.mixins.CacheableMixin.get"}},[e._v("get")])])]),e._v(" "),a("li",[a("code",[a("a",{attrs:{title:"biome.text.dataset_readers.datasource_reader.DataSourceReader.set",href:"mixins.html#biome.text.dataset_readers.mixins.CacheableMixin.set"}},[e._v("set")])])]),e._v(" "),a("li",[a("code",[a("a",{attrs:{title:"biome.text.dataset_readers.datasource_reader.DataSourceReader.signature",href:"datasource_reader.html#biome.text.dataset_readers.datasource_reader.DataSourceReader.signature"}},[e._v("signature")])])])])])])])])])}),[],!1,null,null,null);t.default=r.exports}}]);