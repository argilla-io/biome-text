(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{339:function(t,a,e){"use strict";e.r(a);var s=e(33),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"biome-text-pipelines-learn-allennlp-defs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#biome-text-pipelines-learn-allennlp-defs"}},[t._v("#")]),t._v(" biome.text.pipelines.learn.allennlp.defs "),e("Badge",{attrs:{text:"Module"}})],1),t._v(" "),e("dl",[e("h2",{attrs:{id:"biome.text.pipelines.learn.allennlp.defs.BiomeConfig"}},[t._v("BiomeConfig "),e("Badge",{attrs:{text:"Class"}})],1),t._v(" "),e("dt",[e("div",{staticClass:"language-python extra-class"},[e("pre",{staticClass:"language-python"},[t._v("    "),e("code",[t._v("\n"),e("span",{staticClass:"token keyword"},[t._v("class")]),t._v(" "),e("span",{staticClass:"ident"},[t._v("BiomeConfig")]),t._v(" ("),t._v("\n    "),e("span",[t._v("model_path: str = None")]),e("span",[t._v(",")]),t._v("\n    "),e("span",[t._v("trainer_path: str = None")]),e("span",[t._v(",")]),t._v("\n    "),e("span",[t._v("vocab_path: str = None")]),e("span",[t._v(",")]),t._v("\n    "),e("span",[t._v("train_path: str = None")]),e("span",[t._v(",")]),t._v("\n    "),e("span",[t._v("validation_path: str = None")]),e("span",[t._v(",")]),t._v("\n    "),e("span",[t._v("test_path: str = None")]),e("span",[t._v(",")]),t._v("\n"),e("span",[t._v(")")]),t._v("\n    ")])])])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"},[e("p",[t._v("This class contains biome config parameters usually necessary to run the biome commands.")]),t._v(" "),e("p",[t._v("It also allows a transformation of these parameters to AllenNLP parameters.")]),t._v(" "),e("h2",{attrs:{id:"parameters"}},[t._v("Parameters")]),t._v(" "),e("dl",[e("dt",[e("strong",[e("code",[t._v("model_path")])])]),t._v(" "),e("dd",[t._v("Path to the model yaml file")]),t._v(" "),e("dt",[e("strong",[e("code",[t._v("trainer_path")])])]),t._v(" "),e("dd",[t._v("Path to the trainer yaml file")]),t._v(" "),e("dt",[e("strong",[e("code",[t._v("vocab_path")])])]),t._v(" "),e("dd",[t._v("Path to the vocab yaml file")]),t._v(" "),e("dt",[e("strong",[e("code",[t._v("train_path")])])]),t._v(" "),e("dd",[t._v("Path to the data source yaml file of the training set")]),t._v(" "),e("dt",[e("strong",[e("code",[t._v("validation_path")])])]),t._v(" "),e("dd",[t._v("Path to the data source yaml file of the validation set")]),t._v(" "),e("dt",[e("strong",[e("code",[t._v("test_path")])])]),t._v(" "),e("dd",[t._v("Path to the data source yaml file of the test set")])])]),t._v(" "),e("h3",[t._v("Class variables")]),t._v(" "),e("dl",[e("dt",{attrs:{id:"biome.text.pipelines.learn.allennlp.defs.BiomeConfig.CUDA_DEVICE_FIELD"}},[e("code",{staticClass:"name"},[t._v("var "),e("span",{staticClass:"ident"},[t._v("CUDA_DEVICE_FIELD")])])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"})]),t._v(" "),e("dt",{attrs:{id:"biome.text.pipelines.learn.allennlp.defs.BiomeConfig.MODEL_FIELD"}},[e("code",{staticClass:"name"},[t._v("var "),e("span",{staticClass:"ident"},[t._v("MODEL_FIELD")])])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"})]),t._v(" "),e("dt",{attrs:{id:"biome.text.pipelines.learn.allennlp.defs.BiomeConfig.TRAINER_FIELD"}},[e("code",{staticClass:"name"},[t._v("var "),e("span",{staticClass:"ident"},[t._v("TRAINER_FIELD")])])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"})]),t._v(" "),e("dt",{attrs:{id:"biome.text.pipelines.learn.allennlp.defs.BiomeConfig.TRAIN_DATA_FIELD"}},[e("code",{staticClass:"name"},[t._v("var "),e("span",{staticClass:"ident"},[t._v("TRAIN_DATA_FIELD")])])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"})]),t._v(" "),e("dt",{attrs:{id:"biome.text.pipelines.learn.allennlp.defs.BiomeConfig.VALIDATION_DATA_FIELD"}},[e("code",{staticClass:"name"},[t._v("var "),e("span",{staticClass:"ident"},[t._v("VALIDATION_DATA_FIELD")])])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"})]),t._v(" "),e("dt",{attrs:{id:"biome.text.pipelines.learn.allennlp.defs.BiomeConfig.TEST_DATA_FIELD"}},[e("code",{staticClass:"name"},[t._v("var "),e("span",{staticClass:"ident"},[t._v("TEST_DATA_FIELD")])])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"})]),t._v(" "),e("dt",{attrs:{id:"biome.text.pipelines.learn.allennlp.defs.BiomeConfig.EVALUATE_ON_TEST_FIELD"}},[e("code",{staticClass:"name"},[t._v("var "),e("span",{staticClass:"ident"},[t._v("EVALUATE_ON_TEST_FIELD")])])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"})]),t._v(" "),e("dt",{attrs:{id:"biome.text.pipelines.learn.allennlp.defs.BiomeConfig.DATASET_READER_FIELD"}},[e("code",{staticClass:"name"},[t._v("var "),e("span",{staticClass:"ident"},[t._v("DATASET_READER_FIELD")])])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"})]),t._v(" "),e("dt",{attrs:{id:"biome.text.pipelines.learn.allennlp.defs.BiomeConfig.TYPE_FIELD"}},[e("code",{staticClass:"name"},[t._v("var "),e("span",{staticClass:"ident"},[t._v("TYPE_FIELD")])])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"})]),t._v(" "),e("dt",{attrs:{id:"biome.text.pipelines.learn.allennlp.defs.BiomeConfig.DEFAULT_CALLBACK_TRAINER"}},[e("code",{staticClass:"name"},[t._v("var "),e("span",{staticClass:"ident"},[t._v("DEFAULT_CALLBACK_TRAINER")])])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"})])]),t._v(" "),e("dl",[e("h3",{attrs:{id:"biome.text.pipelines.learn.allennlp.defs.BiomeConfig.yaml_to_dict"}},[t._v("yaml_to_dict "),e("Badge",{attrs:{text:"Static method"}})],1),t._v(" "),e("dt",[e("div",{staticClass:"language-python extra-class"},[e("pre",{staticClass:"language-python"},[e("code",[t._v("\n"),e("span",{staticClass:"token keyword"},[t._v("def")]),t._v(" "),e("span",{staticClass:"ident"},[t._v("yaml_to_dict")]),t._v("("),e("span",[t._v("path: str) -> Dict[str, Any]")]),t._v("\n")]),t._v("\n        ")])])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"},[e("p",[t._v("Reads a yaml file and returns a dict.")]),t._v(" "),e("h2",{attrs:{id:"parameters"}},[t._v("Parameters")]),t._v(" "),e("dl",[e("dt",[e("strong",[e("code",[t._v("path")])])]),t._v(" "),e("dd",[t._v("Path to the yaml file")])]),t._v(" "),e("h2",{attrs:{id:"returns"}},[t._v("Returns")]),t._v(" "),e("dl",[e("dt",[e("code",[t._v("dict")])]),t._v(" "),e("dd",[t._v("If no path is specified, returns an empty dict")])])])]),t._v(" "),e("h3",{attrs:{id:"biome.text.pipelines.learn.allennlp.defs.BiomeConfig.get_cuda_device"}},[t._v("get_cuda_device "),e("Badge",{attrs:{text:"Static method"}})],1),t._v(" "),e("dt",[e("div",{staticClass:"language-python extra-class"},[e("pre",{staticClass:"language-python"},[e("code",[t._v("\n"),e("span",{staticClass:"token keyword"},[t._v("def")]),t._v(" "),e("span",{staticClass:"ident"},[t._v("get_cuda_device")]),t._v("("),e("span",[t._v(") -> int")]),t._v("\n")]),t._v("\n        ")])])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"},[e("p",[t._v("Gets the cuda device from an environment variable.")]),t._v(" "),e("p",[t._v("This is necessary to activate a GPU if available")]),t._v(" "),e("h2",{attrs:{id:"returns"}},[t._v("Returns")]),t._v(" "),e("dl",[e("dt",[e("code",[t._v("cuda_device")])]),t._v(" "),e("dd",[t._v("The integer number of the CUDA device")])])])])]),t._v(" "),e("dl",[e("h3",{attrs:{id:"biome.text.pipelines.learn.allennlp.defs.BiomeConfig.to_allennlp_params"}},[t._v("to_allennlp_params "),e("Badge",{attrs:{text:"Method"}})],1),t._v(" "),e("dt",[e("div",{staticClass:"language-python extra-class"},[e("pre",{staticClass:"language-python"},[e("code",[t._v("\n"),e("span",{staticClass:"token keyword"},[t._v("def")]),t._v(" "),e("span",{staticClass:"ident"},[t._v("to_allennlp_params")]),t._v("("),e("span",[t._v("self) -> Dict")]),t._v("\n")]),t._v("\n        ")])])]),t._v(" "),e("dd",[e("div",{staticClass:"desc"},[e("p",[t._v("Transforms the cfg to AllenNLP parameters by basically joining all biome configurations.")]),t._v(" "),e("h2",{attrs:{id:"returns"}},[t._v("Returns")]),t._v(" "),e("dl",[e("dt",[e("code",[t._v("params")])]),t._v(" "),e("dd",[t._v("A dict in the right format containing the AllenNLP parameters")])])])])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);