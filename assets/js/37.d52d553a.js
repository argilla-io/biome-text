(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{389:function(e,t,s){"use strict";s.r(t);var a=s(26),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"biome-text-modules-heads-language-modelling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#biome-text-modules-heads-language-modelling"}},[e._v("#")]),e._v(" biome.text.modules.heads.language_modelling "),s("Badge",{attrs:{text:"Module"}})],1),e._v(" "),s("div"),e._v(" "),s("div"),e._v(" "),s("pre",{staticClass:"title"},[s("h2",{attrs:{id:"softmaxloss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#softmaxloss"}},[e._v("#")]),e._v(" SoftmaxLoss "),s("Badge",{attrs:{text:"Class"}})],1),e._v("\n")]),e._v(" "),s("pre",{staticClass:"language-python"},[s("code",[e._v("\n"),s("span",{staticClass:"token keyword"},[e._v("class")]),e._v(" "),s("span",{staticClass:"ident"},[e._v("SoftmaxLoss")]),e._v(" (num_words: int, embedding_dim: int)"),e._v("\n")]),e._v("\n")]),e._v(" "),s("p",[e._v("Given some embeddings and some targets, applies a linear layer\nto create logits over possible words and then returns the\nnegative log likelihood.\nTODO: copied from allennlp master branch, remove when 1.0 is released")]),e._v(" "),s("p",[e._v("Initializes internal Module state, shared by both nn.Module and ScriptModule.")]),e._v(" "),s("pre",{staticClass:"title"},[s("h3",{attrs:{id:"ancestors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ancestors"}},[e._v("#")]),e._v(" Ancestors")]),e._v("\n")]),e._v(" "),s("ul",{staticClass:"hlist"},[s("li",[e._v("torch.nn.modules.module.Module")])]),e._v(" "),s("dl",[s("pre",{staticClass:"title"},[s("h3",{attrs:{id:"forward"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#forward"}},[e._v("#")]),e._v(" forward "),s("Badge",{attrs:{text:"Method"}})],1),e._v("\n")]),e._v(" "),s("dt",[s("div",{staticClass:"language-python extra-class"},[s("pre",{staticClass:"language-python"},[s("code",[e._v("\n"),s("span",{staticClass:"token keyword"},[e._v("def")]),e._v(" "),s("span",{staticClass:"ident"},[e._v("forward")]),e._v(" ("),e._v("\n  self,\n  embeddings: torch.Tensor,\n  targets: torch.Tensor,\n)  -> torch.Tensor\n")]),e._v("\n")])])]),e._v(" "),s("dd",[s("p",[e._v("Defines the computation performed at every call.")]),e._v(" "),s("p",[e._v("Should be overridden by all subclasses.")]),e._v(" "),s("div",{staticClass:"admonition note"},[s("p",{staticClass:"admonition-title"},[e._v("Note")]),e._v(" "),s("p",[e._v("Although the recipe for forward pass needs to be defined within\nthis function, one should call the :class:"),s("code",[e._v("Module")]),e._v(" instance afterwards\ninstead of this since the former takes care of running the\nregistered hooks while the latter silently ignores them.")])])])]),e._v(" "),s("div"),e._v(" "),s("pre",{staticClass:"title"},[s("h2",{attrs:{id:"languagemodelling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#languagemodelling"}},[e._v("#")]),e._v(" LanguageModelling "),s("Badge",{attrs:{text:"Class"}})],1),e._v("\n")]),e._v(" "),s("pre",{staticClass:"language-python"},[s("code",[e._v("\n"),s("span",{staticClass:"token keyword"},[e._v("class")]),e._v(" "),s("span",{staticClass:"ident"},[e._v("LanguageModelling")]),e._v(" (backbone: "),s("a",{attrs:{title:"biome.text.backbone.BackboneEncoder",href:"../../backbone.html#biome.text.backbone.BackboneEncoder"}},[e._v("BackboneEncoder")]),e._v(", dropout: float = None)"),e._v("\n")]),e._v("\n")]),e._v(" "),s("p",[e._v("Task head for next-token language modelling, i.e., a model to predict the next token\nin a sequence of tokens.")]),e._v(" "),s("p",[e._v("Initializes internal Module state, shared by both nn.Module and ScriptModule.")]),e._v(" "),s("pre",{staticClass:"title"},[s("h3",{attrs:{id:"ancestors-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ancestors-2"}},[e._v("#")]),e._v(" Ancestors")]),e._v("\n")]),e._v(" "),s("ul",{staticClass:"hlist"},[s("li",[s("a",{attrs:{title:"biome.text.modules.heads.defs.TaskHead",href:"defs.html#biome.text.modules.heads.defs.TaskHead"}},[e._v("TaskHead")])]),e._v(" "),s("li",[e._v("torch.nn.modules.module.Module")]),e._v(" "),s("li",[e._v("allennlp.common.registrable.Registrable")]),e._v(" "),s("li",[e._v("allennlp.common.from_params.FromParams")])]),e._v(" "),s("pre",{staticClass:"title"},[s("h3",{attrs:{id:"inherited-members"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inherited-members"}},[e._v("#")]),e._v(" Inherited members")]),e._v("\n")]),e._v(" "),s("ul",{staticClass:"hlist"},[s("li",[s("code",[s("b",[s("a",{attrs:{title:"biome.text.modules.heads.defs.TaskHead",href:"defs.html#biome.text.modules.heads.defs.TaskHead"}},[e._v("TaskHead")])])]),e._v(":\n"),s("ul",{staticClass:"hlist"},[s("li",[s("code",[s("a",{attrs:{title:"biome.text.modules.heads.defs.TaskHead.explain_prediction",href:"defs.html#biome.text.modules.heads.defs.TaskHead.explain_prediction"}},[e._v("explain_prediction")])])]),e._v(" "),s("li",[s("code",[s("a",{attrs:{title:"biome.text.modules.heads.defs.TaskHead.extend_labels",href:"defs.html#biome.text.modules.heads.defs.TaskHead.extend_labels"}},[e._v("extend_labels")])])]),e._v(" "),s("li",[s("code",[s("a",{attrs:{title:"biome.text.modules.heads.defs.TaskHead.featurize",href:"defs.html#biome.text.modules.heads.defs.TaskHead.featurize"}},[e._v("featurize")])])]),e._v(" "),s("li",[s("code",[s("a",{attrs:{title:"biome.text.modules.heads.defs.TaskHead.forward",href:"defs.html#biome.text.modules.heads.defs.TaskHead.forward"}},[e._v("forward")])])]),e._v(" "),s("li",[s("code",[s("a",{attrs:{title:"biome.text.modules.heads.defs.TaskHead.get_metrics",href:"defs.html#biome.text.modules.heads.defs.TaskHead.get_metrics"}},[e._v("get_metrics")])])]),e._v(" "),s("li",[s("code",[s("a",{attrs:{title:"biome.text.modules.heads.defs.TaskHead.inputs",href:"defs.html#biome.text.modules.heads.defs.TaskHead.inputs"}},[e._v("inputs")])])]),e._v(" "),s("li",[s("code",[s("a",{attrs:{title:"biome.text.modules.heads.defs.TaskHead.labels",href:"defs.html#biome.text.modules.heads.defs.TaskHead.labels"}},[e._v("labels")])])]),e._v(" "),s("li",[s("code",[s("a",{attrs:{title:"biome.text.modules.heads.defs.TaskHead.num_labels",href:"defs.html#biome.text.modules.heads.defs.TaskHead.num_labels"}},[e._v("num_labels")])])]),e._v(" "),s("li",[s("code",[s("a",{attrs:{title:"biome.text.modules.heads.defs.TaskHead.process_output",href:"defs.html#biome.text.modules.heads.defs.TaskHead.process_output"}},[e._v("process_output")])])]),e._v(" "),s("li",[s("code",[s("a",{attrs:{title:"biome.text.modules.heads.defs.TaskHead.register",href:"defs.html#biome.text.modules.heads.defs.TaskHead.register"}},[e._v("register")])])]),e._v(" "),s("li",[s("code",[s("a",{attrs:{title:"biome.text.modules.heads.defs.TaskHead.task_name",href:"defs.html#biome.text.modules.heads.defs.TaskHead.task_name"}},[e._v("task_name")])])])])])]),e._v(" "),s("div"),e._v(" "),s("pre",{staticClass:"title"},[s("h2",{attrs:{id:"languagemodellingspec"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#languagemodellingspec"}},[e._v("#")]),e._v(" LanguageModellingSpec "),s("Badge",{attrs:{text:"Class"}})],1),e._v("\n")]),e._v(" "),s("pre",{staticClass:"language-python"},[s("code",[e._v("\n"),s("span",{staticClass:"token keyword"},[e._v("class")]),e._v(" "),s("span",{staticClass:"ident"},[e._v("LanguageModellingSpec")]),e._v(" (*args, **kwds)"),e._v("\n")]),e._v("\n")]),e._v(" "),s("p",[e._v("Spec for language model head components")]),e._v(" "),s("pre",{staticClass:"title"},[s("h3",{attrs:{id:"ancestors-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ancestors-3"}},[e._v("#")]),e._v(" Ancestors")]),e._v("\n")]),e._v(" "),s("ul",{staticClass:"hlist"},[s("li",[s("a",{attrs:{title:"biome.text.modules.specs.defs.ComponentSpec",href:"../specs/defs.html#biome.text.modules.specs.defs.ComponentSpec"}},[e._v("ComponentSpec")])]),e._v(" "),s("li",[e._v("typing.Generic")]),e._v(" "),s("li",[e._v("allennlp.common.from_params.FromParams")])]),e._v(" "),s("pre",{staticClass:"title"},[s("h3",{attrs:{id:"inherited-members-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inherited-members-2"}},[e._v("#")]),e._v(" Inherited members")]),e._v("\n")]),e._v(" "),s("ul",{staticClass:"hlist"},[s("li",[s("code",[s("b",[s("a",{attrs:{title:"biome.text.modules.specs.defs.ComponentSpec",href:"../specs/defs.html#biome.text.modules.specs.defs.ComponentSpec"}},[e._v("ComponentSpec")])])]),e._v(":\n"),s("ul",{staticClass:"hlist"},[s("li",[s("code",[s("a",{attrs:{title:"biome.text.modules.specs.defs.ComponentSpec.compile",href:"../specs/defs.html#biome.text.modules.specs.defs.ComponentSpec.compile"}},[e._v("compile")])])]),e._v(" "),s("li",[s("code",[s("a",{attrs:{title:"biome.text.modules.specs.defs.ComponentSpec.config",href:"../specs/defs.html#biome.text.modules.specs.defs.ComponentSpec.config"}},[e._v("config")])])]),e._v(" "),s("li",[s("code",[s("a",{attrs:{title:"biome.text.modules.specs.defs.ComponentSpec.from_params",href:"../specs/defs.html#biome.text.modules.specs.defs.ComponentSpec.from_params"}},[e._v("from_params")])])]),e._v(" "),s("li",[s("code",[s("a",{attrs:{title:"biome.text.modules.specs.defs.ComponentSpec.input_dim",href:"../specs/defs.html#biome.text.modules.specs.defs.ComponentSpec.input_dim"}},[e._v("input_dim")])])])])])])])}),[],!1,null,null,null);t.default=o.exports}}]);